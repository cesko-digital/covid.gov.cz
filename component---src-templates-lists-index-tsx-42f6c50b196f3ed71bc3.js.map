{"version":3,"sources":["webpack:///./src/components/measure-list/measure.module.scss","webpack:///./src/components/desktop-top-content/desktop-top-content.module.scss","webpack:///./src/components/czech-days/czech-days.tsx","webpack:///./src/components/time-logic/time-logic.tsx","webpack:///./src/components/time/time.tsx","webpack:///./src/components/measure-list/measure.tsx","webpack:///./src/components/measure-list/measure-list.tsx","webpack:///./src/components/situations-box/situation.tsx","webpack:///./src/components/situations-box/situations-box.tsx","webpack:///./src/components/guide/guide-item.tsx","webpack:///./src/components/guide/guide.tsx","webpack:///./src/components/desktop-top-content/desktop-top-content.tsx","webpack:///./src/templates/lists/index.tsx","webpack:///./src/components/schema/index.tsx","webpack:///./src/components/guide/guide.module.scss","webpack:///./src/components/situations-box/situation.module.scss","webpack:///./src/components/guide/guide-item.module.scss","webpack:///./src/components/content-icon/index.tsx","webpack:///./src/components/content-icon/content-icon.tsx","webpack:///./src/components/content-box/content-box.module.scss","webpack:///./src/components/content-box/content-box.tsx","webpack:///./src/components/situations-box/situations-box.module.scss","webpack:///./src/components/regions-detail/regions-detail.tsx"],"names":["module","exports","CZECH_DAYS_FROM_TO","CZECH_DAYS_ON","isEndDateLessThanFiveDays","date","endDate","Date","formatTimeHHMM","displayTime","datetime","toLocaleTimeString","prefix","suffix","displayOnCzDayCase","displayShortDate","currentLanguage","useCurrentLanguage","dateConfig","year","month","day","timeZone","dateConfigEn","weekday","undefined","timeConfig","hour","minute","dateTime","className","toLocaleString","isShownShorterDate","usedForOnDayCase","useCurrentCzechDay","title","description","area","areaTid","validFrom","validTo","link","t","useTranslation","classNames","styles","measureTitle","measureDescription","measureDetails","isAllCzechRegions","text","variant","href","measures","descriptions","id","path","valid_from","valid_to","relationships","key","item","situation","name","iconCode","to","noExternalClass","situationTitle","code","style","fontSize","situations","buttonUrl","buttonText","noClamp","col","colSm","colLg","classes","x","items","buttonHref","itemDescriptions","isSituationBox","dangerouslySetInnerHTML","__html","boldedTitleCount","colMd","colXl","query","data","pageContext","homepage","situation_label","situation_text","measure_description","situation_description","meta_description","situation_link","measure_label","measure_link","measure_text","vaccination_description","vaccination_link","vaccination_title","vaccination_label","vaccination_text","measure_items","situation_items","hasTransparentHeader","showSearchInHeader","showBackgroundImage","pagePath","htmlLanguage","langCode","isBlogPost","isHomePage","alias","uri","icon","iconClassName","children","buttonVariant","noPadding","contentBoxDescription","regionsTid","i","regions","region"],"mappings":"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","file":"component---src-templates-lists-index-tsx-42f6c50b196f3ed71bc3.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"measure\":\"measure-module--measure--WXIA3\",\"measureTitle\":\"measure-module--measureTitle--3X-J0\",\"measureDescription\":\"measure-module--measureDescription--2X56J\",\"measureDetails\":\"measure-module--measureDetails--2Ht0C\",\"measureDetail\":\"measure-module--measureDetail--1sbVr\",\"measureDetailMobile\":\"measure-module--measureDetailMobile--2l8DD\",\"measureDetailDesktop\":\"measure-module--measureDetailDesktop--1pCXp\",\"measureButton\":\"measure-module--measureButton--MP9hB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"desktop-top-content-module--wrapper--1g2it\",\"title\":\"desktop-top-content-module--title--1qAHI\",\"subtitle\":\"desktop-top-content-module--subtitle--1R9GZ\"};","import { useCurrentLanguage } from '@/components/i18n';\n\nconst CZECH_DAYS_FROM_TO = [\n  'neděle ',\n  'pondělí ',\n  'úterý ',\n  'středy ',\n  'čtvrtka ',\n  'pátku ',\n  'soboty ',\n] as const;\nconst CZECH_DAYS_ON = [\n  'neděli ',\n  'pondělí ',\n  'úterý ',\n  'středu ',\n  'čtvrtek ',\n  'pátek ',\n  'sobotu ',\n] as const;\n\nexport type CzechDaysFromToKey = typeof CZECH_DAYS_FROM_TO[number];\nexport type CzechDaysOnKey = typeof CZECH_DAYS_ON[number];\n\nexport const useCurrentCzechDay = (\n  datetime: number,\n  usedForOnDayCase: boolean,\n  isShownShorterDate: boolean,\n): CzechDaysFromToKey | CzechDaysOnKey => {\n  const currentLanguage = useCurrentLanguage();\n\n  if (currentLanguage === 'cs' && isShownShorterDate === false) {\n    return usedForOnDayCase === false\n      ? CZECH_DAYS_FROM_TO[datetime]\n      : CZECH_DAYS_ON[datetime];\n  }\n};\n","export const isEndDateLessThanFiveDays = (date: string): boolean => {\n  const endDate = new Date(date).getTime();\n  const daysToCheck = 5 * 60 * 60 * 24 * 1000;\n\n  if (date && endDate > Date.now() && endDate - Date.now() <= daysToCheck) {\n    return true;\n  } else if (\n    date &&\n    endDate < Date.now() &&\n    Date.now() - endDate <= daysToCheck\n  ) {\n    return true;\n  } else return false;\n};\n\nexport const formatTimeHHMM = (\n  datetime: string,\n  timeConfig: {},\n  displayTime: boolean,\n): string => {\n  if (displayTime === true) {\n    let date = new Date(datetime).toLocaleTimeString('cs-CZ', timeConfig);\n\n    if (date.length === 8) {\n      date = date.substr(0, 5);\n    }\n    if (date.length === 7) {\n      date = '0' + date;\n      date = date.substr(0, 5);\n    }\n    return ' ' + `(${date})`;\n  }\n};\n","import React from 'react';\nimport { useCurrentLanguage } from '@/components/i18n';\nimport { useCurrentCzechDay } from '../czech-days';\nimport {\n  formatTimeHHMM,\n  isEndDateLessThanFiveDays,\n} from '../time-logic/time-logic';\n\ninterface Props {\n  datetime: string;\n  displayTime?: boolean;\n  prefix?: string;\n  suffix?: string;\n  displayOnCzDayCase?: boolean;\n  displayShortDate?: boolean;\n}\n\nconst Time: React.FC<Props> = ({\n  datetime,\n  displayTime,\n  prefix,\n  suffix = ' ',\n  displayOnCzDayCase = false,\n  displayShortDate = false,\n}) => {\n  const currentLanguage = useCurrentLanguage();\n  const dateConfig = {\n    year: 'numeric',\n    month: displayShortDate ? 'short' : 'long',\n    day: 'numeric',\n    timeZone: 'Europe/Prague',\n  };\n  const dateConfigEn = {\n    ...dateConfig,\n    weekday: displayShortDate ? undefined : 'long',\n  };\n  const timeConfig = {\n    hour: displayTime ? '2-digit' : undefined,\n    minute: displayTime ? '2-digit' : undefined,\n  };\n  return (\n    <span>\n      {currentLanguage === 'en' ? (\n        <time\n          dateTime={datetime}\n          className={\n            isEndDateLessThanFiveDays(datetime)\n              ? 'font-weight-medium'\n              : 'font-weight-normal'\n          }\n        >\n          {prefix?.toLocaleLowerCase()}\n          {new Date(datetime).toLocaleString('en-US', dateConfigEn)}\n          {formatTimeHHMM(datetime, timeConfig, displayTime)}\n          {suffix}\n        </time>\n      ) : (\n        <time\n          dateTime={datetime}\n          className={\n            isEndDateLessThanFiveDays(datetime)\n              ? 'font-weight-medium'\n              : 'font-weight-normal'\n          }\n        >\n          {prefix?.toLocaleLowerCase()}\n          {useCurrentCzechDay(\n            new Date(datetime).getDay(),\n            displayOnCzDayCase,\n            displayShortDate,\n          )}\n          {new Date(datetime).toLocaleString('cs-CZ', dateConfig)}\n          {formatTimeHHMM(datetime, timeConfig, displayTime)}\n          {suffix}\n        </time>\n      )}\n    </span>\n  );\n};\n\nexport default Time;\n","import React from 'react';\n\nimport styles from './measure.module.scss';\nimport Button from '@/components/button';\nimport Time from '@/components/time';\nimport { useTranslation } from '@/components/i18n';\nimport classNames from 'classnames';\nimport { isAllCzechRegions } from '../regions-detail';\n\ninterface Props {\n  title: string;\n  description: string;\n  area: string;\n  areaTid: string[];\n  validFrom: string;\n  validTo: string;\n  link: string;\n}\n\nconst Measure: React.FC<Props> = ({\n  title,\n  description,\n  area,\n  areaTid,\n  validFrom,\n  validTo,\n  link,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={classNames(styles.measure, 'position-relative')}>\n      <h3 className={styles.measureTitle}>{title}</h3>\n      <p className={styles.measureDescription}>{description}</p>\n      <div className={styles.measureDetails}>\n        <div>\n          <div\n            className={classNames(\n              styles.measureDetail,\n              isAllCzechRegions(areaTid)\n                ? 'font-weight-normal'\n                : 'font-weight-medium',\n            )}\n          >\n            {t('applies_for')} {area}\n          </div>\n          <div\n            className={classNames(\n              styles.measureDetail,\n              styles.measureDetailMobile,\n            )}\n          >\n            {validFrom && (\n              <Time\n                displayTime={false}\n                displayShortDate={true}\n                datetime={validFrom}\n                prefix={`${t('from')} `}\n              />\n            )}\n            {validTo && (\n              <Time\n                displayTime={false}\n                displayShortDate={true}\n                datetime={validTo}\n                prefix={`${t('to')} `}\n              />\n            )}\n          </div>\n          <div\n            className={classNames(\n              styles.measureDetail,\n              styles.measureDetailDesktop,\n            )}\n          >\n            {validFrom && (\n              <Time\n                displayTime={false}\n                displayShortDate={false}\n                datetime={validFrom}\n                prefix={`${t('from')} `}\n              />\n            )}\n            {validTo && (\n              <Time\n                displayTime={false}\n                displayShortDate={false}\n                datetime={validTo}\n                prefix={`${t('to')} `}\n              />\n            )}\n          </div>\n        </div>\n        <Button\n          text={t('more')}\n          variant=\"outline-yellow\"\n          className={classNames(styles.measureButton, 'stretched-link')}\n          href={link}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Measure;\n","import { IMeasure } from '@graphql-types';\nimport React from 'react';\nimport Measure from './measure';\n\ninterface Props {\n  measures: IMeasure[];\n  descriptions?: string[];\n}\n\nconst MeasureList: React.FC<Props> = ({ measures, descriptions }) => {\n  const maxItems = 3;\n\n  return (\n    <>\n      {measures\n        .slice(0, maxItems)\n        .map(({ id, title, path, valid_from, valid_to, relationships }, i) => (\n          <Measure\n            key={id}\n            title={title}\n            description={descriptions[i] ?? ''}\n            validFrom={valid_from}\n            validTo={valid_to}\n            link={path.alias}\n            area={relationships.region.map((item) => item.name).join(', ')}\n            areaTid={relationships.region.map(\n              (item) => item.drupal_internal__tid,\n            )}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default MeasureList;\n","import React from 'react';\nimport Link from '@/components/link';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport styles from './situation.module.scss';\nimport { IArea } from '@graphql-types';\nimport ContentIcon from '@/components/content-icon/content-icon';\n\ninterface Props {\n  situation: IArea;\n}\n\nconst Situation: React.FC<Props> = ({ situation }) => {\n  const { name, path } = situation;\n  const iconCode = situation?.relationships?.icon?.code;\n\n  return (\n    <Link to={path.alias} className={styles.situation} noExternalClass>\n      <span className={styles.situationTitle}>\n        <ContentIcon className={styles.situationTitleIcon} code={iconCode} />\n        {name}\n      </span>\n      <KeyboardArrowRight style={{ fontSize: 16 }} className=\"color-yellow\" />\n    </Link>\n  );\n};\n\nexport default Situation;\n","import React from 'react';\nimport Situation from '@/components/situations-box/situation';\nimport styles from './situations-box.module.scss';\nimport { ISituation } from '@graphql-types';\n\ninterface IProps {\n  situations: ISituation[];\n}\n\nconst SituationsBox: React.FC<IProps> = ({ situations }) => {\n  return (\n    <div className={styles.situations}>\n      {situations.map((situation) => (\n        <Situation situation={situation} key={`situation-${situation.id}`} />\n      ))}\n    </div>\n  );\n};\n\nexport default SituationsBox;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Button from '../button';\nimport Col from '../col';\nimport ContentIcon from '../content-icon';\nimport classes from './guide-item.module.scss';\n\nimport Time from '@/components/time';\nimport { useTranslation } from '@/components/i18n';\nimport Link from '../link';\nimport { isAllCzechRegions } from '../regions-detail';\n\ninterface IProps {\n  title: string;\n  description?: string;\n  buttonUrl: string;\n  variant?: 'white' | 'blue' | 'green';\n  buttonText: string;\n  iconCode?: string;\n  area?: string;\n  areaTid?: string[];\n  validFrom?: string;\n  validTo?: string;\n  noClamp?: boolean;\n}\n\nconst GuideItem: React.FC<IProps> = ({\n  title,\n  buttonUrl,\n  buttonText,\n  iconCode,\n  variant,\n  description,\n  area,\n  areaTid,\n  validTo,\n  validFrom,\n  noClamp,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Col\n        col={12}\n        colSm={6}\n        colLg={4}\n        className={classNames(classes.box, 'box')}\n      >\n        <Link\n          className={classNames(classes.clickableWrapper, 'box__inner')}\n          to={buttonUrl}\n          noExternalClass\n        >\n          <div className=\"d-flex flex-row\">\n            {iconCode && (\n              <ContentIcon\n                code={iconCode}\n                className={classNames(classes.guideItemIcon, {\n                  [classes.guideItemIconBlue]: variant === 'white',\n                })}\n              />\n            )}\n            <h3\n              className={classNames(classes.guideItemTitle, {\n                [classes.guideItemTitleBlue]: variant === 'white',\n              })}\n            >\n              {title}\n            </h3>\n          </div>\n          {(area || validFrom || validTo) && (\n            <div\n              className={classNames(\n                'd-flex',\n                'flex-column',\n                'flex-wrap',\n                'justify-content-between',\n                classes.guideItemSubTitle,\n                { [classes.guideItemSubTitleBlue]: variant === 'white' },\n              )}\n            >\n              {/**\n               * There must be a better way of handling which date to show\n               * It will not layout correctly if showing both\n               * Maybe show start date before it actually starts\n               * and show end date during the mesurement?\n               */}\n              <p\n                className={\n                  isAllCzechRegions(areaTid)\n                    ? 'font-weight-normal'\n                    : 'font-weight-medium'\n                }\n              >\n                {area}\n              </p>\n              {validFrom && (\n                <Time\n                  datetime={validFrom}\n                  prefix={`${t('from')} `}\n                  displayShortDate={true}\n                  displayTime={false}\n                />\n              )}\n              {validTo && (\n                <Time\n                  datetime={validTo}\n                  prefix={`${t('to')} `}\n                  displayShortDate={true}\n                  displayTime={false}\n                />\n              )}\n            </div>\n          )}\n          {description && (\n            <p\n              className={classNames(classes.guideItemDescriptionText, {\n                [classes.guideItemDescriptionTextBlue]: variant === 'white',\n                [classes.guideItemDescriptionTextNoClamp]: noClamp,\n              })}\n            >\n              {description}\n            </p>\n          )}\n          <Button\n            variant=\"outline-yellow\"\n            text={buttonText}\n            title={title}\n            className={classNames(classes.guideItemBtn, {\n              [classes.guideItemBtnBlue]: variant === 'white',\n            })}\n          />\n        </Link>\n      </Col>\n    </>\n  );\n};\n\nexport default GuideItem;\n","import classNames from 'classnames';\nimport { IArea, IMeasure } from '@graphql-types';\nimport React from 'react';\nimport Button from '../button';\nimport Col from '../col';\nimport ContentBox from '../content-box';\nimport { useTranslation } from '@/components/i18n';\nimport MeasureList from '../measure-list';\nimport Row from '../row';\nimport SituationsBox from '../situations-box';\nimport GuideItem from './guide-item';\nimport classes from './guide.module.scss';\n\ninterface IProps {\n  items: IArea[] | IMeasure[] | any;\n  title: string;\n  buttonHref?: string;\n  buttonText?: string;\n  description?: string;\n  variant?: 'white' | 'blue' | 'green';\n  itemDescriptions?: string[];\n  noClamp?: boolean;\n}\n\nconst isSituation = (x: any): x is IArea => {\n  return (x as IArea)?.name !== undefined;\n};\n\nconst Guide: React.FC<IProps> = ({\n  items,\n  title,\n  buttonText,\n  description,\n  buttonHref = '',\n  variant = 'blue',\n  itemDescriptions,\n  noClamp,\n}) => {\n  const { t } = useTranslation();\n\n  const isSituationBox = isSituation(items[0]);\n\n  title = title.replace('<p>', '').replace('</p>', '');\n\n  return (\n    <>\n      <div className=\"d-none d-lg-block\">\n        {isSituationBox}\n        <div\n          className={classNames(\n            'guide',\n            'guide--visible',\n            'mt-0',\n            'mb-2',\n            { [classes.guideWhite]: variant === 'white' },\n            { [classes.guideGreen]: variant === 'green' },\n            classes.guide,\n          )}\n        >\n          <div className=\"guide__inner\">\n            <Row>\n              <Col col={12} colLg={3}>\n                <div>\n                  <h2\n                    className={classNames('guide__title', classes.guideTitle, {\n                      [classes.guideTitleBlue]: variant === 'white',\n                    })}\n                    dangerouslySetInnerHTML={{ __html: title }}\n                  />\n                </div>\n                <div>\n                  <p\n                    className={classNames(classes.guideDescriptionText, {\n                      [classes.guideDescriptionTextBlue]: variant === 'white',\n                    })}\n                  >\n                    {description}\n                  </p>\n                </div>\n              </Col>\n              <Col col={12} colLg={9}>\n                <Row className=\"boxes boxes--light boxes--eq\">\n                  {/* If is situation */}\n                  {isSituationBox &&\n                    (items as IArea[]).map((x, i) => {\n                      return (\n                        <GuideItem\n                          key={x.id}\n                          title={x.name}\n                          buttonUrl={x.path.alias}\n                          buttonText={items[i].buttonText || t('more')}\n                          description={itemDescriptions[i] ?? ''}\n                          variant={variant}\n                          iconCode={x.relationships?.icon?.code}\n                          noClamp={noClamp}\n                        />\n                      );\n                    })}\n                  {/* If is measure */}\n                  {!isSituationBox &&\n                    (items as IMeasure[]).map((x, i) => {\n                      return (\n                        <GuideItem\n                          key={x.id}\n                          title={x.title}\n                          buttonUrl={x.path.alias}\n                          variant={variant}\n                          buttonText={t('more')}\n                          description={itemDescriptions[i] ?? ''}\n                          area={x.relationships?.region\n                            ?.map((item) => item.name)\n                            .join(', ')}\n                          areaTid={x.relationships?.region?.map(\n                            (item) => item.drupal_internal__tid,\n                          )}\n                          validFrom={x.valid_from}\n                          validTo={x.valid_to}\n                        />\n                      );\n                    })}\n                </Row>\n              </Col>\n            </Row>\n            {buttonText && (\n              <Row>\n                <Col col={12} colLg={3}>\n                  <div className=\"guide__more\">\n                    <Button\n                      href={buttonHref}\n                      className={classNames(\n                        'btn--color-white',\n                        classes.guideBtn,\n                        {\n                          [classes.guideBtnBlue]: variant === 'white',\n                          [classes.guideBtnGreen]: variant === 'green',\n                        },\n                      )}\n                      text={buttonText}\n                    />\n                  </div>\n                </Col>\n              </Row>\n            )}\n          </div>\n        </div>\n      </div>\n      <ContentBox\n        title={title}\n        boldedTitleCount={2}\n        buttonText={buttonText}\n        buttonHref={buttonHref}\n        variant={variant}\n        className=\"d-lg-none\"\n      >\n        {isSituationBox ? (\n          <SituationsBox situations={items} />\n        ) : (\n          <MeasureList measures={items} descriptions={itemDescriptions} />\n        )}\n      </ContentBox>\n    </>\n  );\n};\n\nexport default Guide;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Col from '../col';\nimport Container from '../container';\nimport SearchBox from '../search-box';\nimport styles from './desktop-top-content.module.scss';\n\nconst DesktopTopContent: React.FC = () => {\n  return (\n    <Container>\n      <div\n        className={classNames(\n          'd-flex',\n          'flex-column',\n          'justify-content-center',\n          'align-items-center',\n          styles.wrapper,\n        )}\n      >\n        <Col col={12} colMd={6} colXl={5}>\n          <SearchBox />\n        </Col>\n      </div>\n    </Container>\n  );\n};\n\nexport default DesktopTopContent;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Container from '@/components/container';\nimport { IQuery, ISitePageContext } from '@graphql-types';\nimport Layout from '@/layouts/default-layout';\nimport { Guide } from '@/components/guide';\nimport DesktopTopContent from '@/components/desktop-top-content';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport { Helmet } from 'react-helmet';\nimport SchemaComp from '@/components/schema';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  data: IQuery;\n  pageContext: ISitePageContext;\n}\n\nconst Home: React.FC<IProps> = ({ data, pageContext }) => {\n  const { t } = useTranslation();\n  const { homepage } = data;\n  const {\n    situation_label,\n    situation_text,\n    measure_description,\n    situation_description,\n    meta_description,\n    situation_link,\n    measure_label,\n    measure_link,\n    measure_text,\n    relationships,\n    vaccination_description,\n    vaccination_link,\n    vaccination_title,\n    vaccination_label,\n    vaccination_text,\n  } = homepage;\n  const { measure_items, situation_items } = relationships;\n\n  return (\n    <Layout\n      pageContext={pageContext}\n      hasTransparentHeader\n      showSearchInHeader={false}\n      showBackgroundImage\n    >\n      <Seo\n        title={t('homepage_meta_title')}\n        description={meta_description ?? 'CovidPortal'}\n        pagePath=\"/\"\n        htmlLanguage={pageContext.langCode}\n      />\n      <SchemaComp\n        langCode={pageContext.langCode}\n        isBlogPost={false}\n        title={t('homepage_meta_title')}\n        description={meta_description}\n        isHomePage\n      />\n      <Helmet title={t('homepage_meta_title')} />\n      <DesktopTopContent />\n      <Container className=\"pt-2\">\n        {vaccination_title?.length ? (\n          <Guide\n            items={vaccination_title.map((x, i) => ({\n              id: i,\n              name: x,\n              path: { alias: vaccination_link[i].uri },\n              buttonText: vaccination_link[i].title,\n              relationships: {\n                icon: { code: relationships.vaccination_icon[i].code },\n              },\n            }))}\n            title={vaccination_label.processed}\n            description={vaccination_text}\n            variant=\"green\"\n            itemDescriptions={vaccination_description}\n            noClamp\n          />\n        ) : (\n          ''\n        )}\n\n        {situation_items?.length ? (\n          <Guide\n            items={situation_items}\n            title={situation_label.processed}\n            description={situation_text}\n            buttonHref={t('slug_situations')}\n            buttonText={situation_link?.title}\n            variant=\"blue\"\n            itemDescriptions={situation_description}\n          />\n        ) : (\n          ''\n        )}\n\n        {measure_items?.length ? (\n          <Guide\n            items={measure_items}\n            title={measure_label.processed}\n            description={measure_text}\n            buttonHref={t('slug_measures')}\n            buttonText={measure_link?.title}\n            variant=\"white\"\n            itemDescriptions={measure_description}\n          />\n        ) : (\n          ''\n        )}\n      </Container>\n    </Layout>\n  );\n};\nexport default Home;\n\n// fix: pls fix query\nexport const query = graphql`\n  query IndexQuery($langCode: String!) {\n    homepage(langcode: { eq: $langCode }) {\n      langcode\n      measure_description\n      situation_description\n      meta_description\n      measure_link {\n        title\n      }\n      moderation_state\n      measure_label {\n        processed\n      }\n      measure_text\n      situation_label {\n        processed\n      }\n      situation_link {\n        title\n      }\n      situation_text\n      vaccination_description\n      vaccination_label {\n        processed\n      }\n      vaccination_link {\n        uri\n        title\n      }\n      vaccination_title\n      vaccination_text\n      relationships {\n        measure_items {\n          id\n          title\n          norm\n          valid_from\n          valid_to\n          path {\n            alias\n          }\n          relationships {\n            region {\n              name\n              drupal_internal__tid\n            }\n          }\n        }\n        situation_items {\n          id\n          name\n          path {\n            alias\n          }\n          relationships {\n            icon {\n              code\n            }\n          }\n        }\n        vaccination_icon {\n          code\n        }\n      }\n    }\n  }\n`;\n","export { default } from './schema';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guide\":\"guide-module--guide--Y56gK\",\"guide--white\":\"guide-module--guide--white--1V86G\",\"guideWhite\":\"guide-module--guide--white--1V86G\",\"guide--green\":\"guide-module--guide--green--buFN3\",\"guideGreen\":\"guide-module--guide--green--buFN3\",\"guide-title\":\"guide-module--guide-title--3jpvv\",\"guideTitle\":\"guide-module--guide-title--3jpvv\",\"guide-title--blue\":\"guide-module--guide-title--blue--1sGBi\",\"guideTitleBlue\":\"guide-module--guide-title--blue--1sGBi\",\"guide-description-text\":\"guide-module--guide-description-text--2EYUo\",\"guideDescriptionText\":\"guide-module--guide-description-text--2EYUo\",\"guide-description-text--blue\":\"guide-module--guide-description-text--blue--3cTiV\",\"guideDescriptionTextBlue\":\"guide-module--guide-description-text--blue--3cTiV\",\"guide-btn\":\"guide-module--guide-btn--hutsJ\",\"guideBtn\":\"guide-module--guide-btn--hutsJ\",\"guide-btn--blue\":\"guide-module--guide-btn--blue--3IIZn\",\"guideBtnBlue\":\"guide-module--guide-btn--blue--3IIZn\",\"guide-btn--green\":\"guide-module--guide-btn--green--2fpka\",\"guideBtnGreen\":\"guide-module--guide-btn--green--2fpka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"situation\":\"situation-module--situation--2ele-\",\"situationTitle\":\"situation-module--situationTitle--sXYSX\",\"situationTitleIcon\":\"situation-module--situationTitleIcon--1hzX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"guide-item-module--box--2ocTY\",\"clickableWrapper\":\"guide-item-module--clickableWrapper--1vNLv\",\"guide-item-btn\":\"guide-item-module--guide-item-btn--3geDl\",\"guideItemBtn\":\"guide-item-module--guide-item-btn--3geDl\",\"guideWrapper\":\"guide-item-module--guideWrapper--1GdrQ\",\"guide-item-title\":\"guide-item-module--guide-item-title--18RmY\",\"guideItemTitle\":\"guide-item-module--guide-item-title--18RmY\",\"guide-item-title--blue\":\"guide-item-module--guide-item-title--blue--1bCig\",\"guideItemTitleBlue\":\"guide-item-module--guide-item-title--blue--1bCig\",\"guide-item-icon\":\"guide-item-module--guide-item-icon--3JFui\",\"guideItemIcon\":\"guide-item-module--guide-item-icon--3JFui\",\"guide-item-icon--blue\":\"guide-item-module--guide-item-icon--blue--DbqnR\",\"guideItemIconBlue\":\"guide-item-module--guide-item-icon--blue--DbqnR\",\"guide-item-btn--blue\":\"guide-item-module--guide-item-btn--blue--2acse\",\"guideItemBtnBlue\":\"guide-item-module--guide-item-btn--blue--2acse\",\"guide-item-sub-title\":\"guide-item-module--guide-item-sub-title--3lds0\",\"guideItemSubTitle\":\"guide-item-module--guide-item-sub-title--3lds0\",\"guide-item-sub-title--blue\":\"guide-item-module--guide-item-sub-title--blue--4elks\",\"guideItemSubTitleBlue\":\"guide-item-module--guide-item-sub-title--blue--4elks\",\"guide-item-description-text\":\"guide-item-module--guide-item-description-text--1LZoE\",\"guideItemDescriptionText\":\"guide-item-module--guide-item-description-text--1LZoE\",\"guide-item-description-text--no-clamp\":\"guide-item-module--guide-item-description-text--no-clamp--iMBAM\",\"guideItemDescriptionTextNoClamp\":\"guide-item-module--guide-item-description-text--no-clamp--iMBAM\",\"guide-item-description-text--blue\":\"guide-item-module--guide-item-description-text--blue--1GaGg\",\"guideItemDescriptionTextBlue\":\"guide-item-module--guide-item-description-text--blue--1GaGg\"};","export { default } from './content-icon';\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n  className?: string;\n  code?: string;\n}\n\nconst DEFAULT_CODE = 'folder';\n\nexport const ContentIcon: FC<IProps> = ({ className, code }) => {\n  const iconClassName = classNames(className, 'material-icons');\n  return <i className={iconClassName}>{code || DEFAULT_CODE}</i>;\n};\n\nexport default ContentIcon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBoxTitle\":\"content-box-module--contentBoxTitle--3E5Vo\",\"contentBoxDescription\":\"content-box-module--contentBoxDescription--O2FI4\",\"contentBox\":\"content-box-module--contentBox--3WK0J\",\"contentBoxNoPadding\":\"content-box-module--contentBoxNoPadding--2vKlZ\",\"contentBox--white\":\"content-box-module--contentBox--white--2fBcG\",\"contentBoxWhite\":\"content-box-module--contentBox--white--2fBcG\",\"contentBox--green\":\"content-box-module--contentBox--green--mjw2P\",\"contentBoxGreen\":\"content-box-module--contentBox--green--mjw2P\",\"contentBox--blue\":\"content-box-module--contentBox--blue--243gT\",\"contentBoxBlue\":\"content-box-module--contentBox--blue--243gT\",\"content-box-btn\":\"content-box-module--content-box-btn--281FR\",\"contentBoxBtn\":\"content-box-module--content-box-btn--281FR\",\"content-box-btn--blue\":\"content-box-module--content-box-btn--blue--22dPm\",\"contentBoxBtnBlue\":\"content-box-module--content-box-btn--blue--22dPm\",\"content-box-btn--green\":\"content-box-module--content-box-btn--green--oRSxb\",\"contentBoxBtnGreen\":\"content-box-module--content-box-btn--green--oRSxb\"};","import React from 'react';\nimport classNames from 'classnames';\nimport Button, { ButtonVariant } from '@/components/button';\nimport Col from '@/components/col';\n\nimport styles from './content-box.module.scss';\n\ninterface Props {\n  title?: string;\n  description?: string;\n  boldedTitleCount?: number;\n  buttonVariant?: ButtonVariant;\n  buttonText?: string;\n  buttonHref?: string;\n  variant?: 'white' | 'blue' | 'green';\n  noPadding?: boolean;\n  className?: string;\n}\n\nconst ContentBox: React.FC<Props> = ({\n  children,\n  title,\n  description,\n  buttonVariant,\n  buttonText,\n  buttonHref,\n  variant = '',\n  noPadding,\n  className,\n}) => {\n  return (\n    // contentBox--white\n    // contentBox--blue\n    // contentBox--green\n    <div\n      className={classNames(\n        styles.contentBox,\n        styles[`contentBox--${variant}`],\n        noPadding && styles.contentBoxNoPadding,\n        'row',\n        className,\n      )}\n    >\n      <Col col={12}>\n        {title && (\n          <h2\n            className={styles.contentBoxTitle}\n            dangerouslySetInnerHTML={{\n              __html: title,\n            }}\n          />\n        )}\n        {description && (\n          <p className={styles.contentBoxDescription}>{description}</p>\n        )}\n        {children}\n        {buttonText && (\n          <Button\n            href={buttonHref}\n            variant={buttonVariant}\n            text={buttonText}\n            className={classNames(styles.contentBoxBtn, {\n              [styles.contentBoxBtnBlue]: variant === 'white',\n              [styles.contentBoxBtnGreen]: variant === 'green',\n            })}\n          />\n        )}\n      </Col>\n    </div>\n  );\n};\n\nexport default ContentBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"situations\":\"situations-box-module--situations--11Ejb\"};","import React from 'react';\n\nimport { IRegion } from '@graphql-types';\n\ninterface IRegionsProps {\n  regions: Pick<IRegion, 'name' | 'drupal_internal__tid'>[];\n}\n\nexport const isAllCzechRegions = (regionsTid: string[]): boolean => {\n  let isAllCzechRegions = false;\n  if (regionsTid && regionsTid.length) {\n    for (let i = 0; i < regionsTid.length; i++) {\n      const regionTid = regionsTid[i];\n      if (regionTid === '33') {\n        isAllCzechRegions = true;\n      }\n    }\n    return isAllCzechRegions;\n  }\n};\n\nexport const RegionsDetail: React.FC<IRegionsProps> = ({ regions }) => {\n  return (\n    <span\n      className={\n        isAllCzechRegions(regions.map((region) => region.drupal_internal__tid))\n          ? 'font-weight-normal'\n          : 'font-weight-medium'\n      }\n    >\n      {regions.map((region) => region.name).join(', ')}\n    </span>\n  );\n};\n\nexport default RegionsDetail;\n"],"sourceRoot":""}
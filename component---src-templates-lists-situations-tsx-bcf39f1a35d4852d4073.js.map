{"version":3,"sources":["webpack:///./src/components/category-item-list/category-item-list.module.scss","webpack:///./src/templates/lists/situations.tsx","webpack:///./src/components/schema/index.tsx","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/components/category-item/category-item.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowLeft.js","webpack:///./src/components/category-item-list/category-item-list.tsx","webpack:///./src/components/category-item-list/measure-area-list.tsx","webpack:///./src/components/category-item-list/situation-area-list.tsx","webpack:///./src/components/content-icon/index.tsx","webpack:///./src/components/content-icon/content-icon.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/category-item/category-item.module.scss"],"names":["module","exports","data","pageContext","t","useTranslation","nodes","collator","Intl","a","b","hasTransparentHeader","showBackgroundImage","showSearchInHeader","title","description","pagePath","htmlLanguage","langCode","isBlogPost","isSpecialList","breadcrumbItems","url","className","items","variant","color","theme","query","iconCode","children","classNames","styles","code","getBreadcrumbClasses","classes","getItemClasses","index","aria-label","key","item","isNavItem","to","name","path","isActive","categoryItemTitle","chevron","style","fontSize","createSvgIcon","createElement","d","titleIconCode","linkBack","currentLanguage","useCurrentLanguage","styledTitle","i","acc","header","icon","dangerouslySetInnerHTML","__html","slug","currentActiveSlug","listItems","relationships","id","iconClassName"],"mappings":"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","file":"component---src-templates-lists-situations-tsx-bcf39f1a35d4852d4073.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"category-item-list-module--whiteTheme--3G9VO\",\"header\":\"category-item-list-module--header--32CZs\",\"isActive\":\"category-item-list-module--isActive--1zttv\",\"blueTheme\":\"category-item-list-module--blueTheme--1VfSe\",\"wrapper\":\"category-item-list-module--wrapper--2l6te\",\"icon\":\"category-item-list-module--icon--3Y5rx\",\"chevron\":\"category-item-list-module--chevron--cmaV2\",\"linkBack\":\"category-item-list-module--linkBack--K051_\"};","import React from 'react';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport { graphql } from 'gatsby';\nimport Container from '@/components/container';\nimport { ISitePageContext, ISituationsAreasListQuery } from 'graphql-types';\nimport Breadcrumb from '@/components/breadcrumb';\nimport Headline from '@/components/headline';\nimport Layout from '@/layouts/default-layout';\nimport SchemaComp from '@/components/schema';\nimport { SituationAreaList } from '@/components/category-item-list';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  data: ISituationsAreasListQuery;\n  pageContext: ISitePageContext;\n}\n\nconst Situations: React.FC<IProps> = ({ data, pageContext }) => {\n  const { t } = useTranslation();\n  const {\n    allSituationAreas: { nodes },\n  } = data;\n\n  const collator = new Intl.Collator([pageContext.langCode]);\n  nodes.sort((a, b) => collator.compare(a.name, b.name));\n\n  return (\n    <Layout\n      pageContext={pageContext}\n      hasTransparentHeader={false}\n      showBackgroundImage\n      showSearchInHeader\n    >\n      <Seo\n        title={t('life_situations')}\n        description={t('situations_overview_meta')}\n        pagePath={t('slug_situations')}\n        htmlLanguage={pageContext.langCode}\n      />\n      <SchemaComp\n        langCode={pageContext.langCode}\n        description={t('situations_overview_meta')}\n        isBlogPost={false}\n        isSpecialList\n        title={t('life_situations')}\n        breadcrumbItems={[\n          { title: t('home'), url: '/' },\n          { title: t('life_situations'), url: t('slug_situations') },\n        ]}\n      />\n      <Container className=\"pt-1 pb-1 pt-md-3 pb-md-3\">\n        <Breadcrumb\n          items={[{ title: t('home'), url: '/' }, t('life_situations')]}\n          variant=\"inverse\"\n        />\n      </Container>\n      <Container className=\"mt-1 d-block d-md-none\">\n        <Headline color=\"white\">{t('situations_overview')}</Headline>\n      </Container>\n      <Container className=\"mt-1\">\n        <SituationAreaList theme=\"blue\" data={data.allSituationAreas.nodes} />\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Situations;\n\nexport const query = graphql`\n  query SituationsAreasList($langCode: String!) {\n    allSituationAreas: allArea(\n      filter: { langcode: { eq: $langCode } }\n      sort: { fields: name }\n    ) {\n      nodes {\n        ...SituationArea\n      }\n    }\n  }\n`;\n","export { default } from './schema';\n","import classNames from 'classnames';\nimport React from 'react';\nimport ContentIcon from '../content-icon';\n\nimport styles from './headline.module.scss';\n\ninterface IProps {\n  iconCode?: string;\n  className?: string;\n  color: 'blue' | 'white';\n}\n\nconst Headline: React.FC<IProps> = ({\n  iconCode,\n  className,\n  children,\n  color,\n}) => {\n  return (\n    <div className={classNames(className, styles.headlineWrapper)}>\n      <h1 className={classNames(styles.headline)}>\n        {iconCode && (\n          <ContentIcon className={styles.headlineIcon} code={iconCode} />\n        )}\n        <span\n          className={classNames({\n            'color-blue': color === 'blue',\n            'color-white': color === 'white',\n          })}\n        >\n          {children}\n        </span>\n      </h1>\n      <hr />\n    </div>\n  );\n};\n\nexport default Headline;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      'breadcrumb__item--active': index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  title={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headlineWrapper\":\"headline-module--headlineWrapper--1KseK\",\"headline\":\"headline-module--headline--2EZlD\",\"headlineIcon\":\"headline-module--headlineIcon--3wPWI\"};","import classNames from 'classnames';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport Link from '@/components/link';\nimport ContentIcon from '@/components/content-icon/content-icon';\nimport React, { FC } from 'react';\n\nimport styles from './category-item.module.scss';\n\ntype Props = {\n  id: string;\n  name: string;\n  path: string;\n  iconCode?: string;\n  isActive: boolean;\n  theme: 'blue' | 'white';\n};\n\nconst CategoryItem: FC<Props> = ({ name, path, iconCode, isActive, theme }) => {\n  return (\n    <Link\n      to={path}\n      className={classNames(styles.categoryItem, 'py-2', {\n        [styles.isActive]: isActive,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      {iconCode && (\n        <ContentIcon className={styles.categoryItemIcon} code={iconCode} />\n      )}\n      <span className={styles.categoryItemTitle}>{name}</span>\n      <div className={styles.chevron}>\n        <KeyboardArrowRight style={{ fontSize: 18 }} className=\"color-yellow\" />\n      </div>\n    </Link>\n  );\n};\n\nexport default CategoryItem;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport styles from './category-item-list.module.scss';\nimport CategoryItem from '../category-item/category-item';\nimport Link from '@/components/link';\nimport { KeyboardArrowLeft } from '@material-ui/icons';\nimport ContentIcon from '../content-icon';\nimport { useCurrentLanguage, useTranslation } from '../i18n';\n\ntype Props = {\n  title: string;\n  titleIconCode?: string;\n  linkBack?: {\n    title: string;\n    slug: string;\n  };\n  items: React.ComponentProps<typeof CategoryItem>[];\n  theme: 'white' | 'blue';\n};\n\nconst makeFirstWordBold = (sentence: string) =>\n  sentence.split(' ').reduce((acc, curr, i) => {\n    if (i === 0) {\n      return (acc += `<strong>${curr}</strong>`);\n    }\n    return (acc += ' ' + curr);\n  }, '');\n\nconst CategoryItemList: FC<Props> = ({\n  items,\n  title,\n  titleIconCode,\n  linkBack,\n  theme,\n}) => {\n  const currentLanguage = useCurrentLanguage();\n  const { t } = useTranslation();\n  const collator = new Intl.Collator([currentLanguage]);\n  items.sort((a, b) => collator.compare(a.name, b.name));\n\n  const styledTitle = makeFirstWordBold(title);\n\n  return (\n    <div\n      className={classNames({\n        [styles.wrapper]: true,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      <div className={styles.header}>\n        <h2>\n          {titleIconCode && (\n            <ContentIcon code={titleIconCode} className={styles.icon} />\n          )}\n          <span dangerouslySetInnerHTML={{ __html: styledTitle }} />\n        </h2>\n        {linkBack ? (\n          <Link className={styles.linkBack} to={linkBack.slug}>\n            <KeyboardArrowLeft\n              style={{ fontSize: 18 }}\n              className={styles.chevron}\n            />{' '}\n            <span>\n              {t('back_to')}&nbsp;{linkBack.title}\n            </span>\n          </Link>\n        ) : (\n          <hr />\n        )}\n      </div>\n      {items.map((item, i) => (\n        <CategoryItem theme={theme} key={`${item.iconCode}${i}`} {...item} />\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryItemList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IMeasureAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  data: IMeasureAreaFragment[];\n  theme: 'white' | 'blue';\n  currentActiveSlug?: string;\n}\n\nconst MeasureAreaList: React.FC<IProps> = ({\n  data,\n  theme,\n  currentActiveSlug,\n}) => {\n  const { t } = useTranslation();\n\n  const listItems: React.ComponentProps<typeof CategoryItemList>['items'] = data\n    .filter(({ relationships }) => relationships.measure !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === currentActiveSlug,\n      theme,\n    }));\n  return (\n    <CategoryItemList\n      theme={theme}\n      items={listItems}\n      title={t('current_measures')}\n    />\n  );\n};\n\nexport const query = graphql`\n  fragment MeasureArea on measure_type {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      measure {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default MeasureAreaList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  data: ISituationAreaFragment[];\n  theme: 'white' | 'blue';\n  currentActiveSlug?: string;\n}\n\nconst SituationAreaList: React.FC<IProps> = ({\n  data,\n  theme,\n  currentActiveSlug,\n}) => {\n  const { t } = useTranslation();\n\n  const listItems: React.ComponentProps<typeof CategoryItemList>['items'] = data\n    .filter(({ relationships }) => relationships.situation !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === currentActiveSlug,\n      theme,\n    }));\n  return (\n    <CategoryItemList\n      theme={theme}\n      items={listItems}\n      title={t('life_situations')}\n    />\n  );\n};\n\nexport const query = graphql`\n  fragment SituationArea on area {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      situation {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default SituationAreaList;\n","export { default } from './content-icon';\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n  className?: string;\n  code?: string;\n}\n\nconst DEFAULT_CODE = 'folder';\n\nexport const ContentIcon: FC<IProps> = ({ className, code }) => {\n  const iconClassName = classNames(className, 'material-icons');\n  return <i className={iconClassName}>{code || DEFAULT_CODE}</i>;\n};\n\nexport default ContentIcon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"category-item-module--whiteTheme--2t2Zj\",\"isActive\":\"category-item-module--isActive--3zXaE\",\"categoryItemTitle\":\"category-item-module--categoryItemTitle--ErF2o\",\"categoryItemIcon\":\"category-item-module--categoryItemIcon--3wAWD\",\"blueTheme\":\"category-item-module--blueTheme--3d2LS\",\"categoryItem\":\"category-item-module--categoryItem--3V8HX\",\"chevron\":\"category-item-module--chevron--D9HLp\"};"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/category-item-list/category-item-list.module.scss","webpack:///./src/components/time/time.tsx","webpack:///./src/layouts/desktop-left-menu-layout.tsx","webpack:///./src/components/schema/index.tsx","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/layouts/desktop-left-menu-layout.module.scss","webpack:///./src/components/list-card/measure-list-card.module.scss","webpack:///./src/components/category-item/category-item.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowLeft.js","webpack:///./src/components/category-item-list/category-item-list.tsx","webpack:///./src/components/category-item-list/measure-area-list.tsx","webpack:///./src/components/category-item-list/situation-area-list.tsx","webpack:///./src/components/content-icon/index.tsx","webpack:///./src/components/content-icon/content-icon.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/category-item/category-item.module.scss","webpack:///./src/components/list-card/measure-list-card.tsx","webpack:///./src/templates/measures/list.tsx"],"names":["module","exports","datetime","displayTime","prefix","suffix","dateConfig","year","month","day","hour","minute","timeZone","dateTime","Date","toLocaleString","menu","children","hideMenuOnMobile","theme","className","classNames","styles","main","iconCode","code","getBreadcrumbClasses","variant","classes","items","getItemClasses","index","aria-label","key","item","isNavItem","to","title","name","path","isActive","categoryItemTitle","chevron","style","fontSize","createSvgIcon","createElement","d","titleIconCode","linkBack","currentLanguage","useCurrentLanguage","t","useTranslation","collator","Intl","a","b","styledTitle","i","acc","header","icon","dangerouslySetInnerHTML","__html","slug","data","currentActiveSlug","listItems","relationships","id","iconClassName","description","link","area","validFrom","validTo","measureListCardDetail","buttonWrapper","text","query","pageContext","measureType","measures","measure","pagePath","langCode","isBlogPost","isBlogList","breadcrumbItems","url","m","r"],"mappings":"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","file":"component---src-templates-measures-list-tsx-5521922de5910b72a7f7.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"category-item-list-module--whiteTheme--3G9VO\",\"header\":\"category-item-list-module--header--32CZs\",\"isActive\":\"category-item-list-module--isActive--1zttv\",\"blueTheme\":\"category-item-list-module--blueTheme--1VfSe\",\"wrapper\":\"category-item-list-module--wrapper--2l6te\",\"icon\":\"category-item-list-module--icon--3Y5rx\",\"chevron\":\"category-item-list-module--chevron--cmaV2\",\"linkBack\":\"category-item-list-module--linkBack--K051_\"};","import React from 'react';\n\ninterface Props {\n  datetime: string;\n  displayTime?: boolean;\n  prefix?: string;\n  suffix?: string;\n}\n\nconst Time: React.FC<Props> = ({\n  datetime,\n  displayTime,\n  prefix,\n  suffix = ' ',\n}) => {\n  const dateConfig = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: displayTime ? '2-digit' : undefined,\n    minute: displayTime ? '2-digit' : undefined,\n    timeZone: 'Europe/Prague',\n  };\n  return (\n    <time dateTime={datetime}>\n      {prefix}\n      {new Date(datetime).toLocaleString('cs-CZ', dateConfig)}\n      {suffix}\n    </time>\n  );\n};\n\nexport default Time;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './desktop-left-menu-layout.module.scss';\n\ninterface IProps {\n  menu: React.ReactNode;\n  hideMenuOnMobile?: boolean;\n  theme: 'white' | 'blue';\n}\n\nconst DesktopLeftMenuLayout: React.FC<IProps> = ({\n  menu,\n  children,\n  hideMenuOnMobile,\n  theme,\n}) => {\n  return (\n    <div\n      className={classNames({\n        [styles.wrapper]: true,\n        'mt-3': true,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      <nav className={classNames({ [styles.hideOnMobile]: hideMenuOnMobile })}>\n        {menu}\n      </nav>\n      <div className={styles.main}>{children}</div>\n    </div>\n  );\n};\n\nexport default DesktopLeftMenuLayout;\n","export { default } from './schema';\n","import classNames from 'classnames';\nimport React from 'react';\nimport ContentIcon from '../content-icon';\n\nimport styles from './headline.module.scss';\n\ninterface IProps {\n  iconCode?: string;\n  className?: string;\n}\n\nconst Headline: React.FC<IProps> = ({ iconCode, className, children }) => {\n  return (\n    <div className={classNames(className, styles.headlineWrapper)}>\n      <h1 className={classNames(styles.headline)}>\n        {iconCode && (\n          <ContentIcon className={styles.headlineIcon} code={iconCode} />\n        )}\n        <span>{children}</span>\n      </h1>\n      <hr />\n    </div>\n  );\n};\n\nexport default Headline;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  title={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headlineWrapper\":\"headline-module--headlineWrapper--1KseK\",\"headline\":\"headline-module--headline--2EZlD\",\"headlineIcon\":\"headline-module--headlineIcon--3wPWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"desktop-left-menu-layout-module--whiteTheme--eds4O\",\"blueTheme\":\"desktop-left-menu-layout-module--blueTheme--2rS9O\",\"wrapper\":\"desktop-left-menu-layout-module--wrapper--2FRhZ\",\"hideOnMobile\":\"desktop-left-menu-layout-module--hideOnMobile--3x5nP\",\"main\":\"desktop-left-menu-layout-module--main--2USeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"measure-list-card-module--listItem--2NERh\",\"buttonWrapper\":\"measure-list-card-module--buttonWrapper--3V2sV\"};","import classNames from 'classnames';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport Link from '@/components/link';\nimport ContentIcon from '@/components/content-icon/content-icon';\nimport React, { FC } from 'react';\n\nimport styles from './category-item.module.scss';\n\ntype Props = {\n  id: string;\n  name: string;\n  path: string;\n  iconCode?: string;\n  isActive: boolean;\n  theme: 'blue' | 'white';\n};\n\nconst CategoryItem: FC<Props> = ({ name, path, iconCode, isActive, theme }) => {\n  return (\n    <Link\n      to={path}\n      className={classNames(styles.categoryItem, 'py-2', {\n        [styles.isActive]: isActive,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      {iconCode && (\n        <ContentIcon className={styles.categoryItemIcon} code={iconCode} />\n      )}\n      <span className={styles.categoryItemTitle}>{name}</span>\n      <div className={styles.chevron}>\n        <KeyboardArrowRight style={{ fontSize: 18 }} className=\"color-yellow\" />\n      </div>\n    </Link>\n  );\n};\n\nexport default CategoryItem;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport styles from './category-item-list.module.scss';\nimport CategoryItem from '../category-item/category-item';\nimport Link from '@/components/link';\nimport { KeyboardArrowLeft } from '@material-ui/icons';\nimport ContentIcon from '../content-icon';\nimport { useCurrentLanguage, useTranslation } from '../i18n';\n\ntype Props = {\n  title: string;\n  titleIconCode?: string;\n  linkBack?: {\n    title: string;\n    slug: string;\n  };\n  items: React.ComponentProps<typeof CategoryItem>[];\n  theme: 'white' | 'blue';\n};\n\nconst makeFirstWordBold = (sentence: string) =>\n  sentence.split(' ').reduce((acc, curr, i) => {\n    if (i === 0) {\n      return (acc += `<strong>${curr}</strong>`);\n    }\n    return (acc += ' ' + curr);\n  }, '');\n\nconst CategoryItemList: FC<Props> = ({\n  items,\n  title,\n  titleIconCode,\n  linkBack,\n  theme,\n}) => {\n  const currentLanguage = useCurrentLanguage();\n  const { t } = useTranslation();\n  const collator = new Intl.Collator([currentLanguage]);\n  items.sort((a, b) => collator.compare(a.name, b.name));\n\n  const styledTitle = makeFirstWordBold(title);\n\n  return (\n    <div\n      className={classNames({\n        [styles.wrapper]: true,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      <div className={styles.header}>\n        <h2>\n          {titleIconCode && (\n            <ContentIcon code={titleIconCode} className={styles.icon} />\n          )}\n          <span dangerouslySetInnerHTML={{ __html: styledTitle }} />\n        </h2>\n        {linkBack ? (\n          <Link className={styles.linkBack} to={linkBack.slug}>\n            <KeyboardArrowLeft\n              style={{ fontSize: 18 }}\n              className={styles.chevron}\n            />{' '}\n            <span>\n              {t('back_to')}&nbsp;{linkBack.title}\n            </span>\n          </Link>\n        ) : (\n          <hr />\n        )}\n      </div>\n      {items.map((item, i) => (\n        <CategoryItem theme={theme} key={`${item.iconCode}${i}`} {...item} />\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryItemList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IMeasureAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  data: IMeasureAreaFragment[];\n  theme: 'white' | 'blue';\n  currentActiveSlug?: string;\n}\n\nconst MeasureAreaList: React.FC<IProps> = ({\n  data,\n  theme,\n  currentActiveSlug,\n}) => {\n  const { t } = useTranslation();\n\n  const listItems: React.ComponentProps<typeof CategoryItemList>['items'] = data\n    .filter(({ relationships }) => relationships.measure !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === currentActiveSlug,\n      theme,\n    }));\n  return (\n    <CategoryItemList\n      theme={theme}\n      items={listItems}\n      title={t('current_measures')}\n    />\n  );\n};\n\nexport const query = graphql`\n  fragment MeasureArea on measure_type {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      measure {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default MeasureAreaList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  data: ISituationAreaFragment[];\n  theme: 'white' | 'blue';\n  currentActiveSlug?: string;\n}\n\nconst SituationAreaList: React.FC<IProps> = ({\n  data,\n  theme,\n  currentActiveSlug,\n}) => {\n  const { t } = useTranslation();\n\n  const listItems: React.ComponentProps<typeof CategoryItemList>['items'] = data\n    .filter(({ relationships }) => relationships.situation !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === currentActiveSlug,\n      theme,\n    }));\n  return (\n    <CategoryItemList\n      theme={theme}\n      items={listItems}\n      title={t('life_situations')}\n    />\n  );\n};\n\nexport const query = graphql`\n  fragment SituationArea on area {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      situation {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default SituationAreaList;\n","export { default } from './content-icon';\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n  className?: string;\n  code?: string;\n}\n\nconst DEFAULT_CODE = 'folder';\n\nexport const ContentIcon: FC<IProps> = ({ className, code }) => {\n  const iconClassName = classNames(className, 'material-icons');\n  return <i className={iconClassName}>{code || DEFAULT_CODE}</i>;\n};\n\nexport default ContentIcon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"category-item-module--whiteTheme--2t2Zj\",\"isActive\":\"category-item-module--isActive--3zXaE\",\"categoryItemTitle\":\"category-item-module--categoryItemTitle--ErF2o\",\"categoryItemIcon\":\"category-item-module--categoryItemIcon--3wAWD\",\"blueTheme\":\"category-item-module--blueTheme--3d2LS\",\"categoryItem\":\"category-item-module--categoryItem--3V8HX\",\"chevron\":\"category-item-module--chevron--D9HLp\"};","import React from 'react';\nimport Button from '@/components/button';\nimport Link from '@/components/link';\nimport Time from '@/components/time';\nimport styles from './measure-list-card.module.scss';\nimport classNames from 'classnames';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  title: string;\n  link: string;\n  description: string;\n  area: string;\n  validFrom: string;\n  validTo: string;\n}\n\nconst MeasureListCard: React.FC<IProps> = ({\n  title,\n  description,\n  link,\n  area,\n  validFrom,\n  validTo,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Link\n      to={link}\n      className={classNames('card text-decoration-none', styles.listItem)}\n    >\n      <h2 className=\"font-weight-medium mb-1\">{title}</h2>\n      <p className=\"mt-0 color-gray\">{description}</p>\n      <div className=\"d-flex justify-content-between align-items-end\">\n        <div>\n          <div className={styles.measureListCardDetail}>\n            {t('applies_for')} {area}\n          </div>\n          <div className={styles.measureListCardDetail}>\n            {validFrom && (\n              <Time displayTime datetime={validFrom} prefix={`${t('from')} `} />\n            )}\n            {validTo && (\n              <Time displayTime datetime={validTo} prefix={`${t('to')} `} />\n            )}\n          </div>\n        </div>\n        <div className={styles.buttonWrapper}>\n          <Button text={t('detail')} variant=\"outline\" />\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default MeasureListCard;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IMeasureListQuery, ISitePageContext } from 'graphql-types';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport Container from '@/components/container';\nimport Headline from '@/components/headline';\nimport Layout from '@/layouts/default-layout';\nimport Breadcrumb from '@/components/breadcrumb';\nimport MeasureListCard from '@/components/list-card/measure-list-card';\nimport SchemaComp from '@/components/schema';\nimport { MeasureAreaList } from '@/components/category-item-list';\nimport DesktopLeftMenuLayout from '@/layouts/desktop-left-menu-layout';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  pageContext: ISitePageContext;\n  data: IMeasureListQuery;\n}\n\nconst Home: React.FC<IProps> = ({ data, pageContext }) => {\n  const { t } = useTranslation();\n  const { measureType } = data;\n  const measures = measureType.relationships?.measure || [];\n\n  const collator = new Intl.Collator([pageContext.langCode]);\n  measures.sort((a, b) => collator.compare(a.title, b.title));\n\n  return (\n    <Layout pageContext={pageContext}>\n      <Seo\n        title={measureType.name}\n        description={t('current_measures_overview_meta')}\n        pagePath={pageContext.slug}\n      />\n      <SchemaComp\n        langCode={pageContext.langCode}\n        isBlogPost={false}\n        isBlogList\n        title={measureType.name}\n        description={t('current_measures_overview_meta')}\n        breadcrumbItems={[\n          { title: t('home'), url: '/' },\n          { title: t('current_measures'), url: t('slug_measures') },\n          measureType.name,\n        ]}\n      />\n      <Container>\n        <div className=\"pt-1\">\n          <Breadcrumb\n            items={[\n              { title: t('home'), url: '/' },\n              { title: t('current_measures'), url: t('slug_measures') },\n              measureType.name,\n            ]}\n            variant=\"inverse\"\n          />\n        </div>\n        <DesktopLeftMenuLayout\n          theme=\"white\"\n          menu={\n            <MeasureAreaList\n              theme=\"white\"\n              data={data.allMeasureType.nodes}\n              currentActiveSlug={pageContext.slug}\n            />\n          }\n          hideMenuOnMobile\n        >\n          <Headline iconCode={data.measureType?.relationships?.icon?.code}>\n            {measureType.name}\n          </Headline>\n          {measures.map((m) => (\n            <MeasureListCard\n              key={`taxonomyTermMeasureType-list-item-${m.id}`}\n              title={m.title}\n              description={m.norm}\n              link={m.path?.alias}\n              validFrom={m.valid_from}\n              validTo={m.valid_to}\n              area={m.relationships?.region?.map((r) => r.name).join(' ,')}\n            />\n          ))}\n        </DesktopLeftMenuLayout>\n      </Container>\n    </Layout>\n  );\n};\nexport default Home;\n\nexport const query = graphql`\n  query MeasureList($slug: String!, $langCode: String!) {\n    measureType(path: { alias: { eq: $slug }, langcode: { eq: $langCode } }) {\n      name\n      relationships {\n        icon {\n          code\n        }\n        measure {\n          valid_from\n          valid_to\n          id\n          norm\n          title\n          relationships {\n            region {\n              name\n            }\n          }\n          path {\n            alias\n          }\n        }\n      }\n    }\n    allMeasureType(filter: { langcode: { eq: $langCode } }) {\n      nodes {\n        ...MeasureArea\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
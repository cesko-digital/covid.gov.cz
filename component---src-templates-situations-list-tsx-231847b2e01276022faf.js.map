{"version":3,"sources":["webpack:///./src/components/category-item-list/category-item-list.module.scss","webpack:///./src/layouts/desktop-left-menu-layout.tsx","webpack:///./src/components/schema/index.tsx","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/list-card/list-card.tsx","webpack:///./src/templates/situations/list.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/layouts/desktop-left-menu-layout.module.scss","webpack:///./src/components/list-card/measure-list-card.module.scss","webpack:///./src/components/category-item/category-item.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowLeft.js","webpack:///./src/components/category-item-list/category-item-list.tsx","webpack:///./src/components/category-item-list/measure-area-list.tsx","webpack:///./src/components/category-item-list/situation-area-list.tsx","webpack:///./src/components/content-icon/index.tsx","webpack:///./src/components/content-icon/content-icon.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/category-item/category-item.module.scss"],"names":["module","exports","menu","children","hideMenuOnMobile","theme","className","classNames","styles","main","iconCode","color","code","title","description","link","t","useTranslation","to","buttonWrapper","text","variant","query","data","pageContext","area","situations","collator","Intl","a","b","hasTransparentHeader","showSearchInHeader","showBackgroundImage","pagePath","langCode","isBlogPost","isBlogList","breadcrumbItems","url","items","currentActiveSlug","slug","id","meta_description","path","key","alias","getBreadcrumbClasses","classes","getItemClasses","index","aria-label","item","isNavItem","name","isActive","categoryItemTitle","chevron","style","fontSize","createSvgIcon","createElement","d","titleIconCode","linkBack","currentLanguage","useCurrentLanguage","styledTitle","i","acc","header","icon","dangerouslySetInnerHTML","__html","listItems","relationships","iconClassName"],"mappings":"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","file":"component---src-templates-situations-list-tsx-231847b2e01276022faf.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"category-item-list-module--whiteTheme--3G9VO\",\"header\":\"category-item-list-module--header--32CZs\",\"isActive\":\"category-item-list-module--isActive--1zttv\",\"blueTheme\":\"category-item-list-module--blueTheme--1VfSe\",\"wrapper\":\"category-item-list-module--wrapper--2l6te\",\"icon\":\"category-item-list-module--icon--3Y5rx\",\"chevron\":\"category-item-list-module--chevron--cmaV2\",\"linkBack\":\"category-item-list-module--linkBack--K051_\"};","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './desktop-left-menu-layout.module.scss';\n\ninterface IProps {\n  menu: React.ReactNode;\n  hideMenuOnMobile?: boolean;\n  theme: 'white' | 'blue';\n}\n\nconst DesktopLeftMenuLayout: React.FC<IProps> = ({\n  menu,\n  children,\n  hideMenuOnMobile,\n  theme,\n}) => {\n  return (\n    <div\n      className={classNames({\n        [styles.wrapper]: true,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      <nav className={classNames({ [styles.hideOnMobile]: hideMenuOnMobile })}>\n        {menu}\n      </nav>\n      <div className={styles.main}>{children}</div>\n    </div>\n  );\n};\n\nexport default DesktopLeftMenuLayout;\n","export { default } from './schema';\n","import classNames from 'classnames';\nimport React from 'react';\nimport ContentIcon from '../content-icon';\n\nimport styles from './headline.module.scss';\n\ninterface IProps {\n  iconCode?: string;\n  className?: string;\n  color: 'blue' | 'white';\n}\n\nconst Headline: React.FC<IProps> = ({\n  iconCode,\n  className,\n  children,\n  color,\n}) => {\n  return (\n    <div className={classNames(className, styles.headlineWrapper)}>\n      <h1 className={classNames(styles.headline)}>\n        {iconCode && (\n          <ContentIcon className={styles.headlineIcon} code={iconCode} />\n        )}\n        <span\n          className={classNames({\n            'color-blue': color === 'blue',\n            'color-white': color === 'white',\n          })}\n        >\n          {children}\n        </span>\n      </h1>\n      <hr />\n    </div>\n  );\n};\n\nexport default Headline;\n","import React from 'react';\nimport Button from '@/components/button';\nimport Link from '@/components/link';\nimport styles from './measure-list-card.module.scss';\nimport classNames from 'classnames';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  title: string;\n  link: string;\n  description: string;\n}\n\nconst ListCard: React.FC<IProps> = ({ title, description, link }) => {\n  const { t } = useTranslation();\n  return (\n    <Link\n      to={link}\n      className={classNames('card text-decoration-none', styles.listItem)}\n    >\n      <h2 className=\"font-weight-medium mb-1\">{title}</h2>\n      <div className=\"d-flex justify-content-between align-items-end\">\n        <p className=\"m-0 color-gray\">{description}</p>\n        <div className={styles.buttonWrapper}>\n          <Button text={t('detail')} variant=\"outline\" />\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default ListCard;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationsListQuery, ISitePageContext } from 'graphql-types';\nimport Container from '@/components/container';\n\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport Headline from '@/components/headline';\nimport ListCard from '@/components/list-card';\nimport Layout from '@/layouts/default-layout';\nimport Breadcrumb from '@/components/breadcrumb';\nimport SchemaComp from '@/components/schema';\nimport { SituationAreaList } from '@/components/category-item-list';\nimport DesktopLeftMenuLayout from '@/layouts/desktop-left-menu-layout';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  data: ISituationsListQuery;\n  pageContext: ISitePageContext;\n}\n\nconst SituationList: React.FC<IProps> = ({ data, pageContext }) => {\n  const { t } = useTranslation();\n  const { area } = data;\n  const situations = area.relationships?.situation || [];\n\n  const collator = new Intl.Collator([pageContext.langCode]);\n  situations.sort((a, b) => collator.compare(a.title, b.title));\n\n  return (\n    <Layout\n      pageContext={pageContext}\n      hasTransparentHeader={false}\n      showSearchInHeader\n      showBackgroundImage={false}\n    >\n      <Seo\n        title={area.name}\n        description={t('situations_overview_meta')}\n        pagePath=\"/situations\"\n      />\n      <SchemaComp\n        langCode={pageContext.langCode}\n        isBlogPost={false}\n        isBlogList\n        title={area.name}\n        description={t('situations_overview_meta')}\n        breadcrumbItems={[\n          { title: t('home'), url: '/' },\n          {\n            title: t('life_situations'),\n            url: t('slug_situations'),\n          },\n          area.name,\n        ]}\n      />\n      <Container>\n        <div className=\"pt-1 pb-1 pt-md-3 pb-md-3\">\n          <Breadcrumb\n            items={[\n              { title: t('home'), url: '/' },\n              {\n                title: t('life_situations'),\n                url: t('slug_situations'),\n              },\n              area.name,\n            ]}\n          />\n        </div>\n        <DesktopLeftMenuLayout\n          theme=\"blue\"\n          menu={\n            <SituationAreaList\n              theme=\"blue\"\n              data={data.allSituationAreas.nodes}\n              currentActiveSlug={pageContext.slug}\n            />\n          }\n          hideMenuOnMobile\n        >\n          <Headline\n            iconCode={data.area?.relationships?.icon?.code}\n            color=\"blue\"\n          >\n            {area.name}\n          </Headline>\n          {situations.map(({ id, title, meta_description, path }) => {\n            return (\n              <ListCard\n                title={title}\n                description={meta_description}\n                key={`area-list-item-${id}`}\n                link={path?.alias}\n              />\n            );\n          })}\n        </DesktopLeftMenuLayout>\n      </Container>\n    </Layout>\n  );\n};\nexport default SituationList;\n\nexport const query = graphql`\n  query SituationsList($slug: String!, $langCode: String!) {\n    area(path: { alias: { eq: $slug }, langcode: { eq: $langCode } }) {\n      name\n      relationships {\n        icon {\n          code\n        }\n        situation {\n          id\n          title\n          meta_description\n          path {\n            alias\n          }\n        }\n      }\n    }\n    allSituationAreas: allArea(\n      filter: { langcode: { eq: $langCode } }\n      sort: { fields: name }\n    ) {\n      nodes {\n        ...SituationArea\n      }\n    }\n  }\n`;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      'breadcrumb__item--active': index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  title={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headlineWrapper\":\"headline-module--headlineWrapper--1KseK\",\"headline\":\"headline-module--headline--2EZlD\",\"headlineIcon\":\"headline-module--headlineIcon--3wPWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"desktop-left-menu-layout-module--whiteTheme--eds4O\",\"blueTheme\":\"desktop-left-menu-layout-module--blueTheme--2rS9O\",\"wrapper\":\"desktop-left-menu-layout-module--wrapper--2FRhZ\",\"hideOnMobile\":\"desktop-left-menu-layout-module--hideOnMobile--3x5nP\",\"main\":\"desktop-left-menu-layout-module--main--2USeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"measure-list-card-module--listItem--2NERh\",\"buttonWrapper\":\"measure-list-card-module--buttonWrapper--3V2sV\"};","import classNames from 'classnames';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport Link from '@/components/link';\nimport ContentIcon from '@/components/content-icon/content-icon';\nimport React, { FC } from 'react';\n\nimport styles from './category-item.module.scss';\n\ntype Props = {\n  id: string;\n  name: string;\n  path: string;\n  iconCode?: string;\n  isActive: boolean;\n  theme: 'blue' | 'white';\n};\n\nconst CategoryItem: FC<Props> = ({ name, path, iconCode, isActive, theme }) => {\n  return (\n    <Link\n      to={path}\n      className={classNames(styles.categoryItem, 'py-2', {\n        [styles.isActive]: isActive,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      {iconCode && (\n        <ContentIcon className={styles.categoryItemIcon} code={iconCode} />\n      )}\n      <span className={styles.categoryItemTitle}>{name}</span>\n      <div className={styles.chevron}>\n        <KeyboardArrowRight style={{ fontSize: 18 }} className=\"color-yellow\" />\n      </div>\n    </Link>\n  );\n};\n\nexport default CategoryItem;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport styles from './category-item-list.module.scss';\nimport CategoryItem from '../category-item/category-item';\nimport Link from '@/components/link';\nimport { KeyboardArrowLeft } from '@material-ui/icons';\nimport ContentIcon from '../content-icon';\nimport { useCurrentLanguage, useTranslation } from '../i18n';\n\ntype Props = {\n  title: string;\n  titleIconCode?: string;\n  linkBack?: {\n    title: string;\n    slug: string;\n  };\n  items: React.ComponentProps<typeof CategoryItem>[];\n  theme: 'white' | 'blue';\n};\n\nconst makeFirstWordBold = (sentence: string) =>\n  sentence.split(' ').reduce((acc, curr, i) => {\n    if (i === 0) {\n      return (acc += `<strong>${curr}</strong>`);\n    }\n    return (acc += ' ' + curr);\n  }, '');\n\nconst CategoryItemList: FC<Props> = ({\n  items,\n  title,\n  titleIconCode,\n  linkBack,\n  theme,\n}) => {\n  const currentLanguage = useCurrentLanguage();\n  const { t } = useTranslation();\n  const collator = new Intl.Collator([currentLanguage]);\n  items.sort((a, b) => collator.compare(a.name, b.name));\n\n  const styledTitle = makeFirstWordBold(title);\n\n  return (\n    <div\n      className={classNames({\n        [styles.wrapper]: true,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      <div className={styles.header}>\n        <h2>\n          {titleIconCode && (\n            <ContentIcon code={titleIconCode} className={styles.icon} />\n          )}\n          <span dangerouslySetInnerHTML={{ __html: styledTitle }} />\n        </h2>\n        {linkBack ? (\n          <Link className={styles.linkBack} to={linkBack.slug}>\n            <KeyboardArrowLeft\n              style={{ fontSize: 18 }}\n              className={styles.chevron}\n            />{' '}\n            <span>\n              {t('back_to')}&nbsp;{linkBack.title}\n            </span>\n          </Link>\n        ) : (\n          <hr />\n        )}\n      </div>\n      {items.map((item, i) => (\n        <CategoryItem theme={theme} key={`${item.iconCode}${i}`} {...item} />\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryItemList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IMeasureAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  data: IMeasureAreaFragment[];\n  theme: 'white' | 'blue';\n  currentActiveSlug?: string;\n}\n\nconst MeasureAreaList: React.FC<IProps> = ({\n  data,\n  theme,\n  currentActiveSlug,\n}) => {\n  const { t } = useTranslation();\n\n  const listItems: React.ComponentProps<typeof CategoryItemList>['items'] = data\n    .filter(({ relationships }) => relationships.measure !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === currentActiveSlug,\n      theme,\n    }));\n  return (\n    <CategoryItemList\n      theme={theme}\n      items={listItems}\n      title={t('current_measures')}\n    />\n  );\n};\n\nexport const query = graphql`\n  fragment MeasureArea on measure_type {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      measure {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default MeasureAreaList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  data: ISituationAreaFragment[];\n  theme: 'white' | 'blue';\n  currentActiveSlug?: string;\n}\n\nconst SituationAreaList: React.FC<IProps> = ({\n  data,\n  theme,\n  currentActiveSlug,\n}) => {\n  const { t } = useTranslation();\n\n  const listItems: React.ComponentProps<typeof CategoryItemList>['items'] = data\n    .filter(({ relationships }) => relationships.situation !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === currentActiveSlug,\n      theme,\n    }));\n  return (\n    <CategoryItemList\n      theme={theme}\n      items={listItems}\n      title={t('life_situations')}\n    />\n  );\n};\n\nexport const query = graphql`\n  fragment SituationArea on area {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      situation {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default SituationAreaList;\n","export { default } from './content-icon';\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n  className?: string;\n  code?: string;\n}\n\nconst DEFAULT_CODE = 'folder';\n\nexport const ContentIcon: FC<IProps> = ({ className, code }) => {\n  const iconClassName = classNames(className, 'material-icons');\n  return <i className={iconClassName}>{code || DEFAULT_CODE}</i>;\n};\n\nexport default ContentIcon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"category-item-module--whiteTheme--2t2Zj\",\"isActive\":\"category-item-module--isActive--3zXaE\",\"categoryItemTitle\":\"category-item-module--categoryItemTitle--ErF2o\",\"categoryItemIcon\":\"category-item-module--categoryItemIcon--3wAWD\",\"blueTheme\":\"category-item-module--blueTheme--3d2LS\",\"categoryItem\":\"category-item-module--categoryItem--3V8HX\",\"chevron\":\"category-item-module--chevron--D9HLp\"};"],"sourceRoot":""}
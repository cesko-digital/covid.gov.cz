{"version":3,"sources":["webpack:///./src/components/category-item-list/category-item-list.module.scss","webpack:///./src/components/time/time.tsx","webpack:///./src/components/subtitle/subtitle.module.scss","webpack:///./src/layouts/desktop-left-menu-layout.tsx","webpack:///./src/components/related-measure/related-measure.module.scss","webpack:///./src/components/topic-detail/topic-detail.module.scss","webpack:///./src/components/headline/headline.tsx","webpack:///./src/components/breadcrumb/breadcrumb.tsx","webpack:///./src/components/link-styled/link-styled.module.scss","webpack:///./src/components/headline/headline.module.scss","webpack:///./src/layouts/desktop-left-menu-layout.module.scss","webpack:///./src/components/category-item/category-item.tsx","webpack:///./node_modules/@material-ui/icons/esm/KeyboardArrowLeft.js","webpack:///./src/components/category-item-list/category-item-list.tsx","webpack:///./src/components/category-item-list/measure-area-list.tsx","webpack:///./src/components/category-item-list/situation-area-list.tsx","webpack:///./src/components/last-update/last-update.tsx","webpack:///./src/components/subtitle/subtitle.tsx","webpack:///./src/components/topic-detail/topic-detail.tsx","webpack:///./src/components/last-update/last-update.module.scss","webpack:///./node_modules/@material-ui/icons/esm/Room.js","webpack:///./node_modules/@material-ui/icons/esm/Event.js","webpack:///./src/components/marker/marker.tsx","webpack:///./src/components/content-icon/index.tsx","webpack:///./src/components/content-icon/content-icon.tsx","webpack:///./src/components/accordion/accordion-section.module.scss","webpack:///./src/components/content-box/content-box.module.scss","webpack:///./src/components/content-box/content-box.tsx","webpack:///./src/components/breadcrumb/breadcrumb.module.scss","webpack:///./src/components/category-item/category-item.module.scss","webpack:///./node_modules/@material-ui/icons/esm/Clear.js","webpack:///./node_modules/@material-ui/icons/esm/Add.js","webpack:///./src/components/accordion/accordion-section.tsx","webpack:///./src/components/accordion/accordion.tsx","webpack:///./src/components/related-measure/related-measure.tsx","webpack:///./src/components/link-styled/linkStyled.tsx","webpack:///./src/components/link-list/link-list.tsx","webpack:///./src/components/situation-detail/situation-detail.tsx","webpack:///./src/templates/situations/page.tsx"],"names":["module","exports","datetime","displayTime","prefix","suffix","dateConfig","year","month","day","hour","minute","timeZone","dateTime","Date","toLocaleString","menu","children","hideMenuOnMobile","theme","className","classNames","styles","main","iconCode","code","getBreadcrumbClasses","variant","classes","items","getItemClasses","index","aria-label","key","item","isNavItem","to","title","name","path","isActive","categoryItemTitle","chevron","style","fontSize","createSvgIcon","createElement","d","titleIconCode","linkBack","currentLanguage","useCurrentLanguage","t","useTranslation","collator","Intl","a","b","styledTitle","i","acc","header","icon","dangerouslySetInnerHTML","__html","slug","data","currentActiveSlug","listItems","relationships","id","lastUpdated","isMobile","processedContent","subtitle","topicDetail","Marker","RegionsMarker","regions","region","TimeMarker","validFrom","validTo","iconClassName","description","buttonVariant","buttonText","buttonHref","noPadding","col","contentBoxDescription","href","text","useState","opened","setOpened","toggleSection","useCallback","section","onClick","sectionContent","measure","relatedMeasure","alias","valid_to","linkStyled","linkStyledLink","linkStyledIcon","links","link","situation","relatedSituations","faq","hasFaq","Boolean","hasRelatedLinks","hasRelatedMeasures","hasRelatedSituations","processed","uri","last_updated","boldedTitleCount","value","query","pageContext","pagePath","htmlLanguage","langCode","datePublished","dateModified","isBlogPost","breadcrumbItems","url","questions_answers"],"mappings":"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","file":"component---src-templates-situations-page-tsx-d7f62543e62159f0c3ed.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"category-item-list-module--whiteTheme--3G9VO\",\"header\":\"category-item-list-module--header--32CZs\",\"isActive\":\"category-item-list-module--isActive--1zttv\",\"blueTheme\":\"category-item-list-module--blueTheme--1VfSe\",\"wrapper\":\"category-item-list-module--wrapper--2l6te\",\"icon\":\"category-item-list-module--icon--3Y5rx\",\"chevron\":\"category-item-list-module--chevron--cmaV2\",\"linkBack\":\"category-item-list-module--linkBack--K051_\"};","import React from 'react';\n\ninterface Props {\n  datetime: string;\n  displayTime?: boolean;\n  prefix?: string;\n  suffix?: string;\n}\n\nconst Time: React.FC<Props> = ({\n  datetime,\n  displayTime,\n  prefix,\n  suffix = ' ',\n}) => {\n  const dateConfig = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: displayTime ? '2-digit' : undefined,\n    minute: displayTime ? '2-digit' : undefined,\n    timeZone: 'Europe/Prague',\n  };\n  return (\n    <time dateTime={datetime}>\n      {prefix}\n      {new Date(datetime).toLocaleString('cs-CZ', dateConfig)}\n      {suffix}\n    </time>\n  );\n};\n\nexport default Time;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"subtitle-module--subtitle--3-_JB\"};","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './desktop-left-menu-layout.module.scss';\n\ninterface IProps {\n  menu: React.ReactNode;\n  hideMenuOnMobile?: boolean;\n  theme: 'white' | 'blue';\n}\n\nconst DesktopLeftMenuLayout: React.FC<IProps> = ({\n  menu,\n  children,\n  hideMenuOnMobile,\n  theme,\n}) => {\n  return (\n    <div\n      className={classNames({\n        [styles.wrapper]: true,\n        'mt-3': true,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      <nav className={classNames({ [styles.hideOnMobile]: hideMenuOnMobile })}>\n        {menu}\n      </nav>\n      <div className={styles.main}>{children}</div>\n    </div>\n  );\n};\n\nexport default DesktopLeftMenuLayout;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"relatedMeasure\":\"related-measure-module--relatedMeasure--1ipsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topicDetail\":\"topic-detail-module--topicDetail--kRP4b\",\"article\":\"topic-detail-module--article--2LWJk\"};","import classNames from 'classnames';\nimport React from 'react';\nimport ContentIcon from '../content-icon';\n\nimport styles from './headline.module.scss';\n\ninterface IProps {\n  iconCode?: string;\n  className?: string;\n}\n\nconst Headline: React.FC<IProps> = ({ iconCode, className, children }) => {\n  return (\n    <div className={classNames(className, styles.headlineWrapper)}>\n      <h1 className={classNames(styles.headline)}>\n        {iconCode && (\n          <ContentIcon className={styles.headlineIcon} code={iconCode} />\n        )}\n        <span>{children}</span>\n      </h1>\n      <hr />\n    </div>\n  );\n};\n\nexport default Headline;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Link from '../link';\nimport classes from './breadcrumb.module.scss';\n\ninterface INavItem {\n  title: string;\n  url: string;\n}\n\ninterface IProps {\n  items: (string | INavItem)[];\n  variant?: 'normal' | 'inverse';\n}\n\nconst isNavItem = (item: any): item is INavItem => {\n  return (item as INavItem).title !== undefined;\n};\n\nconst getBreadcrumbClasses = (variant: IProps['variant']): string => {\n  return classNames('breadcrumb', classes.breadcrumbContainer, {\n    'breadcrumb--inverse': variant === 'inverse',\n  });\n};\n\nconst Breadcrumb: React.FC<IProps> = ({ items, variant = 'normal' }) => {\n  const getItemClasses = (index: number): string => {\n    return classNames('breadcrumb__item', classes.breadcrumbItem, {\n      [classes.breadcrumbItemActive]: index === items.length - 1,\n    });\n  };\n\n  return (\n    <nav className=\"breadcrumbs\" aria-label=\"breadcrumb\">\n      <ol className={getBreadcrumbClasses(variant)}>\n        {items.map((item, index) => {\n          return (\n            <li\n              key={`breadcrumb-item-${index}`}\n              className={getItemClasses(index)}\n            >\n              {isNavItem(item) ? (\n                <Link\n                  to={item.url}\n                  className=\"breadcrumb__link\"\n                  title={item.title}\n                />\n              ) : (\n                <span className=\"breadcrumb__link\">{item}</span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkStyled\":\"link-styled-module--linkStyled--_N7FG\",\"linkStyledLink\":\"link-styled-module--linkStyledLink--2U7Xp\",\"linkStyledIcon\":\"link-styled-module--linkStyledIcon--1ApnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headlineWrapper\":\"headline-module--headlineWrapper--1KseK\",\"headline\":\"headline-module--headline--2EZlD\",\"headlineIcon\":\"headline-module--headlineIcon--3wPWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"desktop-left-menu-layout-module--whiteTheme--eds4O\",\"blueTheme\":\"desktop-left-menu-layout-module--blueTheme--2rS9O\",\"wrapper\":\"desktop-left-menu-layout-module--wrapper--2FRhZ\",\"hideOnMobile\":\"desktop-left-menu-layout-module--hideOnMobile--3x5nP\",\"main\":\"desktop-left-menu-layout-module--main--2USeX\"};","import classNames from 'classnames';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport Link from '@/components/link';\nimport ContentIcon from '@/components/content-icon/content-icon';\nimport React, { FC } from 'react';\n\nimport styles from './category-item.module.scss';\n\ntype Props = {\n  id: string;\n  name: string;\n  path: string;\n  iconCode?: string;\n  isActive: boolean;\n  theme: 'blue' | 'white';\n};\n\nconst CategoryItem: FC<Props> = ({ name, path, iconCode, isActive, theme }) => {\n  return (\n    <Link\n      to={path}\n      className={classNames(styles.categoryItem, 'py-2', {\n        [styles.isActive]: isActive,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      {iconCode && (\n        <ContentIcon className={styles.categoryItemIcon} code={iconCode} />\n      )}\n      <span className={styles.categoryItemTitle}>{name}</span>\n      <div className={styles.chevron}>\n        <KeyboardArrowRight style={{ fontSize: 18 }} className=\"color-yellow\" />\n      </div>\n    </Link>\n  );\n};\n\nexport default CategoryItem;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport styles from './category-item-list.module.scss';\nimport CategoryItem from '../category-item/category-item';\nimport Link from '@/components/link';\nimport { KeyboardArrowLeft } from '@material-ui/icons';\nimport ContentIcon from '../content-icon';\nimport { useCurrentLanguage, useTranslation } from '../i18n';\n\ntype Props = {\n  title: string;\n  titleIconCode?: string;\n  linkBack?: {\n    title: string;\n    slug: string;\n  };\n  items: React.ComponentProps<typeof CategoryItem>[];\n  theme: 'white' | 'blue';\n};\n\nconst makeFirstWordBold = (sentence: string) =>\n  sentence.split(' ').reduce((acc, curr, i) => {\n    if (i === 0) {\n      return (acc += `<strong>${curr}</strong>`);\n    }\n    return (acc += ' ' + curr);\n  }, '');\n\nconst CategoryItemList: FC<Props> = ({\n  items,\n  title,\n  titleIconCode,\n  linkBack,\n  theme,\n}) => {\n  const currentLanguage = useCurrentLanguage();\n  const { t } = useTranslation();\n  const collator = new Intl.Collator([currentLanguage]);\n  items.sort((a, b) => collator.compare(a.name, b.name));\n\n  const styledTitle = makeFirstWordBold(title);\n\n  return (\n    <div\n      className={classNames({\n        [styles.wrapper]: true,\n        [styles.whiteTheme]: theme === 'white',\n        [styles.blueTheme]: theme === 'blue',\n      })}\n    >\n      <div className={styles.header}>\n        <h2>\n          {titleIconCode && (\n            <ContentIcon code={titleIconCode} className={styles.icon} />\n          )}\n          <span dangerouslySetInnerHTML={{ __html: styledTitle }} />\n        </h2>\n        {linkBack ? (\n          <Link className={styles.linkBack} to={linkBack.slug}>\n            <KeyboardArrowLeft\n              style={{ fontSize: 18 }}\n              className={styles.chevron}\n            />{' '}\n            <span>\n              {t('back_to')}&nbsp;{linkBack.title}\n            </span>\n          </Link>\n        ) : (\n          <hr />\n        )}\n      </div>\n      {items.map((item, i) => (\n        <CategoryItem theme={theme} key={`${item.iconCode}${i}`} {...item} />\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryItemList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { IMeasureAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  data: IMeasureAreaFragment[];\n  theme: 'white' | 'blue';\n  currentActiveSlug?: string;\n}\n\nconst MeasureAreaList: React.FC<IProps> = ({\n  data,\n  theme,\n  currentActiveSlug,\n}) => {\n  const { t } = useTranslation();\n\n  const listItems: React.ComponentProps<typeof CategoryItemList>['items'] = data\n    .filter(({ relationships }) => relationships.measure !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === currentActiveSlug,\n      theme,\n    }));\n  return (\n    <CategoryItemList\n      theme={theme}\n      items={listItems}\n      title={t('current_measures')}\n    />\n  );\n};\n\nexport const query = graphql`\n  fragment MeasureArea on measure_type {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      measure {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default MeasureAreaList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationAreaFragment } from 'graphql-types';\nimport CategoryItemList from './category-item-list';\nimport { useTranslation } from '../i18n';\n\ninterface IProps {\n  data: ISituationAreaFragment[];\n  theme: 'white' | 'blue';\n  currentActiveSlug?: string;\n}\n\nconst SituationAreaList: React.FC<IProps> = ({\n  data,\n  theme,\n  currentActiveSlug,\n}) => {\n  const { t } = useTranslation();\n\n  const listItems: React.ComponentProps<typeof CategoryItemList>['items'] = data\n    .filter(({ relationships }) => relationships.situation !== null)\n    .map(({ id, name, path, relationships }) => ({\n      id,\n      name,\n      path: path.alias,\n      iconCode: relationships.icon?.code,\n      isActive: path.alias === currentActiveSlug,\n      theme,\n    }));\n  return (\n    <CategoryItemList\n      theme={theme}\n      items={listItems}\n      title={t('life_situations')}\n    />\n  );\n};\n\nexport const query = graphql`\n  fragment SituationArea on area {\n    id\n    name\n    path {\n      alias\n    }\n    relationships {\n      situation {\n        id\n      }\n      icon {\n        code\n      }\n    }\n  }\n`;\n\nexport default SituationAreaList;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Maybe, Scalars } from '../../../graphql-types';\nimport { useTranslation } from '../i18n';\nimport Time from '../time';\n\nimport styles from './last-update.module.scss';\n\ninterface Props {\n  lastUpdated: Maybe<Scalars['Date']>;\n  isMobile: boolean;\n}\n\nconst LastUpdate: React.FC<Props> = ({ lastUpdated, isMobile }) => {\n  const { t } = useTranslation();\n  return (\n    <div\n      className={classNames({\n        [styles.lastUpdateDesktop]: !isMobile,\n        [styles.lastUpdateMobile]: isMobile,\n      })}\n    >\n      <Time\n        prefix={`${t('last_updated')} `}\n        displayTime\n        datetime={lastUpdated}\n      />\n    </div>\n  );\n};\n\nexport default LastUpdate;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './subtitle.module.scss';\n\nconst Subtitle: React.FC<{ className?: string }> = ({\n  children,\n  className,\n}) => {\n  return <p className={classNames(styles.subtitle, className)}>{children}</p>;\n};\n\nexport default Subtitle;\n","import React from 'react';\n\nimport Headline from '@/components/headline';\nimport Subtitle from '@/components/subtitle';\n\nimport styles from './topic-detail.module.scss';\nimport LastUpdate from '../last-update';\nimport { Maybe, Scalars } from '../../../graphql-types';\n\ninterface IProps {\n  title: string;\n  titleIconCode?: string;\n  processedContent: string;\n  lastUpdated: Maybe<Scalars['Date']>;\n  subtitle?: string;\n}\n\nconst TopicDetail: React.FC<IProps> = ({\n  title,\n  titleIconCode,\n  processedContent,\n  lastUpdated,\n  subtitle,\n}) => (\n  <div className={styles.topicDetail}>\n    <Headline iconCode={titleIconCode}>{title}</Headline>\n    <LastUpdate isMobile={false} lastUpdated={lastUpdated} />\n    <article className=\"bg-white rounded px-2 pb-2 px-md-3 pb-md-3 pt-md-0 pt-2\">\n      <hr className=\"mt-0 mb-2 d-none d-md-block\" />\n      {subtitle && <Subtitle>{subtitle}</Subtitle>}\n      <div\n        className={styles.article}\n        dangerouslySetInnerHTML={{\n          __html: processedContent,\n        }}\n      />\n    </article>\n  </div>\n);\n\nexport default TopicDetail;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lastUpdateMobile\":\"last-update-module--lastUpdateMobile--1Wbl7\",\"lastUpdateDesktop\":\"last-update-module--lastUpdateDesktop--1Qx-H\"};","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Room');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"\n}), 'Event');","import React from 'react';\n\nimport { Room, Event } from '@material-ui/icons';\nimport { IRegion } from '@graphql-types';\nimport Time from '../time';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  icon: React.ReactNode;\n}\n\nconst Marker: React.FC<IProps> = ({ icon, children }) => {\n  return (\n    <div className=\"d-flex align-items-center mb-1 color-blue\">\n      {icon}\n      &nbsp;\n      <span className=\"text-uppercase font-weight-medium\">{children}</span>\n    </div>\n  );\n};\n\ninterface IRegionsMarkerProps {\n  regions: Pick<IRegion, 'name'>[];\n}\n\nexport const RegionsMarker: React.FC<IRegionsMarkerProps> = ({ regions }) => (\n  <Marker icon={<Room />}>\n    {regions.map((region) => region.name).join(', ')}\n  </Marker>\n);\n\ninterface ITimeProps {\n  validFrom: string;\n  validTo: string;\n  displayTime: boolean;\n}\n\nexport const TimeMarker: React.FC<ITimeProps> = ({\n  validFrom,\n  validTo,\n  displayTime,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Marker icon={<Event />}>\n      {validFrom && (\n        <Time\n          displayTime={displayTime}\n          datetime={validFrom}\n          prefix={`${t('from')} `}\n        />\n      )}\n      {validTo && (\n        <Time\n          displayTime={displayTime}\n          datetime={validTo}\n          prefix={`${t('to')} `}\n        />\n      )}\n    </Marker>\n  );\n};\n\nexport default Marker;\n","export { default } from './content-icon';\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n  className?: string;\n  code?: string;\n}\n\nconst DEFAULT_CODE = 'folder';\n\nexport const ContentIcon: FC<IProps> = ({ className, code }) => {\n  const iconClassName = classNames(className, 'material-icons');\n  return <i className={iconClassName}>{code || DEFAULT_CODE}</i>;\n};\n\nexport default ContentIcon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"accordion-section-module--section--BMIm5\",\"sectionHeading\":\"accordion-section-module--sectionHeading--1aw0-\",\"sectionButton\":\"accordion-section-module--sectionButton--1rqdf\",\"sectionContent\":\"accordion-section-module--sectionContent--3m_BR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBoxTitle\":\"content-box-module--contentBoxTitle--3E5Vo\",\"contentBoxDescription\":\"content-box-module--contentBoxDescription--O2FI4\",\"contentBox\":\"content-box-module--contentBox--3WK0J\",\"contentBoxNoPadding\":\"content-box-module--contentBoxNoPadding--2vKlZ\",\"contentBox--white\":\"content-box-module--contentBox--white--2fBcG\",\"contentBoxWhite\":\"content-box-module--contentBox--white--2fBcG\",\"contentBox--blue\":\"content-box-module--contentBox--blue--243gT\",\"contentBoxBlue\":\"content-box-module--contentBox--blue--243gT\",\"content-box-btn\":\"content-box-module--content-box-btn--281FR\",\"contentBoxBtn\":\"content-box-module--content-box-btn--281FR\",\"content-box-btn--blue\":\"content-box-module--content-box-btn--blue--22dPm\",\"contentBoxBtnBlue\":\"content-box-module--content-box-btn--blue--22dPm\"};","import React from 'react';\nimport classNames from 'classnames';\nimport Button, { ButtonVariant } from '@/components/button';\nimport Col from '@/components/col';\n\nimport styles from './content-box.module.scss';\n\ninterface Props {\n  title?: string;\n  description?: string;\n  boldedTitleCount?: number;\n  buttonVariant?: ButtonVariant;\n  buttonText?: string;\n  buttonHref?: string;\n  variant?: 'white' | 'blue';\n  noPadding?: boolean;\n}\n\nconst ContentBox: React.FC<Props> = ({\n  children,\n  title,\n  description,\n  buttonVariant,\n  buttonText,\n  buttonHref,\n  variant = '',\n  noPadding,\n}) => {\n  return (\n    // contentBox--white\n    // contentBox--blue\n    <div\n      className={classNames(\n        styles.contentBox,\n        styles[`contentBox--${variant}`],\n        noPadding && styles.contentBoxNoPadding,\n        'row',\n      )}\n    >\n      <Col col={12}>\n        {title && (\n          <h2\n            className={styles.contentBoxTitle}\n            dangerouslySetInnerHTML={{\n              __html: title,\n            }}\n          />\n        )}\n        {description && (\n          <p className={styles.contentBoxDescription}>{description}</p>\n        )}\n        {children}\n        {buttonText && (\n          <Button\n            href={buttonHref}\n            variant={buttonVariant}\n            text={buttonText}\n            className={classNames(styles.contentBoxBtn, {\n              [styles.contentBoxBtnBlue]: variant === 'white',\n            })}\n          />\n        )}\n      </Col>\n    </div>\n  );\n};\n\nexport default ContentBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumb-module--breadcrumbContainer--aIVuB\",\"breadcrumbItem\":\"breadcrumb-module--breadcrumbItem--3jBwP\",\"breadcrumbItemActive\":\"breadcrumb-module--breadcrumbItemActive--6MwJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteTheme\":\"category-item-module--whiteTheme--2t2Zj\",\"isActive\":\"category-item-module--isActive--3zXaE\",\"categoryItemTitle\":\"category-item-module--categoryItemTitle--ErF2o\",\"categoryItemIcon\":\"category-item-module--categoryItemIcon--3wAWD\",\"blueTheme\":\"category-item-module--blueTheme--3d2LS\",\"categoryItem\":\"category-item-module--categoryItem--3V8HX\",\"chevron\":\"category-item-module--chevron--D9HLp\"};","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport { Add, Clear } from '@material-ui/icons';\n\nimport styles from './accordion-section.module.scss';\nimport Button from '@/components/button';\n\nexport interface Section {\n  title: string;\n  text: string;\n}\n\nconst AccordionSection: React.FC<Section> = ({ title, text }) => {\n  const [opened, setOpened] = useState(false);\n\n  const toggleSection = useCallback(() => {\n    setOpened(!opened);\n  }, [opened]);\n\n  return (\n    <div className={styles.section}>\n      <div\n        className={classNames(\n          styles.sectionHeading,\n          'd-flex',\n          'justify-content-between',\n          'align-items-center',\n        )}\n        onClick={toggleSection}\n      >\n        {title}\n        <Button\n          icon={opened ? <Clear /> : <Add />}\n          className={classNames(\n            styles.sectionButton,\n            'd-flex',\n            'justify-content-center',\n            'align-items-center',\n          )}\n          variant=\"yellow\"\n        />\n      </div>\n      {opened && <div className={styles.sectionContent}>{text}</div>}\n    </div>\n  );\n};\n\nexport default AccordionSection;\n","import React from 'react';\nimport AccordionSection, {\n  Section,\n} from '@/components/accordion/accordion-section';\n\ninterface Props {\n  data: Section[];\n}\n\nconst Accordion: React.FC<Props> = ({ data }) => {\n  return (\n    <>\n      {data.map((item, index) => (\n        <AccordionSection key={index} {...item} />\n      ))}\n    </>\n  );\n};\n\nexport default Accordion;\n","import React from 'react';\n\nimport { IRelatedMeasureFragment } from '@graphql-types';\nimport { graphql } from 'gatsby';\nimport Link from '@/components/link';\nimport { RegionsMarker, TimeMarker } from '../marker';\n\nimport styles from './related-measure.module.scss';\n\ninterface IProps {\n  measure: IRelatedMeasureFragment;\n}\n\nconst RelatedMeasure: React.FC<IProps> = ({ measure }) => {\n  return (\n    <div className={styles.relatedMeasure}>\n      <Link className=\"color-blue\" to={measure.path.alias}>\n        {measure.title}\n      </Link>\n      <RegionsMarker regions={measure.relationships.region} />\n      <TimeMarker\n        displayTime\n        validFrom={measure.valid_from}\n        validTo={measure.valid_to}\n      />\n    </div>\n  );\n};\n\nexport const query = graphql`\n  fragment RelatedMeasure on measure {\n    title\n    path {\n      alias\n      langcode\n    }\n    valid_from\n    valid_to\n    relationships {\n      region {\n        name\n      }\n    }\n  }\n`;\n\nexport default RelatedMeasure;\n","import React from 'react';\nimport Link from '@/components/link';\nimport styles from './link-styled.module.scss';\nimport { KeyboardArrowRight } from '@material-ui/icons';\n\ninterface Props {\n  title: string;\n  to: string;\n}\n\nconst LinkStyled: React.FC<Props> = ({ to, title }) => {\n  return (\n    <p className={styles.linkStyled}>\n      <Link to={to} title={title} className={styles.linkStyledLink}>\n        {title}\n        <KeyboardArrowRight\n          style={{ fontSize: 20 }}\n          className={styles.linkStyledIcon}\n        />\n      </Link>\n    </p>\n  );\n};\n\nexport default LinkStyled;\n","import React from 'react';\nimport LinkStyled from '@/components/link-styled';\n\ninterface Props {\n  links: Array<{\n    path?: { alias?: string; langcode?: string };\n    title?: string;\n  }>;\n}\n\nconst LinkList: React.FC<Props> = ({ links }) => {\n  return (\n    <div>\n      {links.length !== 0\n        ? links.map((link, i) => (\n            <LinkStyled key={i} title={link.title} to={link.path.alias} />\n          ))\n        : ''}\n    </div>\n  );\n};\n\nexport default LinkList;\n","import React from 'react';\n\nimport Container from '@/components/container';\nimport Link from '@/components/link';\n\nimport Accordion from '../accordion';\nimport ContentBox from '../content-box';\nimport { ISituationDetailFragment } from '@graphql-types';\nimport { graphql } from 'gatsby';\nimport TopicDetail from '../topic-detail';\nimport RelatedMeasure from '../related-measure';\nimport LinkList from '../link-list';\nimport { useTranslation } from '../i18n';\nimport LastUpdate from '../last-update';\n\ninterface IProps {\n  situation: ISituationDetailFragment;\n}\n\nconst SituationDetail: React.FC<IProps> = ({ situation }) => {\n  const relatedSituations = situation.relationships.related_situations;\n  const faq = situation.questions_answers;\n\n  const hasFaq = Boolean(faq.length);\n  const { t } = useTranslation();\n  const hasRelatedLinks = Boolean(situation.links.length);\n  const hasRelatedMeasures = Boolean(situation.relationships.measures.length);\n  const hasRelatedSituations = Boolean(relatedSituations.length);\n\n  const iconCode =\n    situation.relationships?.icon?.code ||\n    situation.relationships?.situation_type?.relationships?.icon?.code;\n\n  return (\n    <>\n      <TopicDetail\n        title={situation.title}\n        titleIconCode={iconCode}\n        lastUpdated={situation?.last_updated}\n        processedContent={situation?.content?.processed}\n      />\n      <div className=\"bg-white mb-3 pb-2 pb-md-0 px-2 px-md-3\">\n        {hasRelatedMeasures && (\n          <div className=\"pt-2\">\n            <hr />\n            <h3 className=\"mb-1 color-blue-dark\">{t('related_measures')}</h3>\n            {situation.relationships.measures.map((measure) => (\n              <RelatedMeasure key={measure.path.alias} measure={measure} />\n            ))}\n          </div>\n        )}\n        {hasRelatedLinks && (\n          <div className=\"pt-2\">\n            <hr />\n            <h3 className=\"mb-1 color-blue-dark\">{t('related')}</h3>\n            <div>\n              {situation.links.map((link, index) => (\n                <div key={index}>\n                  <Link className=\"color-blue mb-1\" to={link.uri}>\n                    {link.title}\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        <LastUpdate isMobile lastUpdated={situation?.last_updated} />\n      </div>\n      <Container>\n        {hasFaq && (\n          <ContentBox variant=\"blue\" title={t('faq')} boldedTitleCount={2}>\n            <Accordion\n              data={situation.questions_answers.map((item) => ({\n                title: item.question,\n                text: item.value,\n              }))}\n            />\n          </ContentBox>\n        )}\n        {hasRelatedSituations && (\n          <ContentBox\n            title={t('similar_topics')}\n            boldedTitleCount={1}\n            variant=\"blue\"\n          >\n            <LinkList links={relatedSituations} />\n          </ContentBox>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport const query = graphql`\n  fragment SituationDetail on situation {\n    title\n    content {\n      processed\n    }\n    links {\n      uri\n      title\n    }\n    relationships {\n      region {\n        name\n      }\n      icon {\n        code\n      }\n      situation_type {\n        name\n        path {\n          alias\n        }\n        relationships {\n          icon {\n            code\n          }\n        }\n      }\n      measures {\n        ...RelatedMeasure\n      }\n      related_situations {\n        title\n        path {\n          alias\n          langcode\n        }\n      }\n    }\n    path {\n      alias\n    }\n    questions_answers {\n      question\n      value\n    }\n    changed\n    valid_from\n    valid_to\n    last_updated\n  }\n`;\n\nexport default SituationDetail;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationPageQuery, ISitePageContext } from 'graphql-types';\nimport Layout from '@/layouts/default-layout';\nimport SituationDetail from '@/components/situation-detail/situation-detail';\nimport Container from '@/components/container';\nimport { SchemaComp } from '@/components/schema/schema';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport Breadcrumb from '@/components/breadcrumb';\nimport DesktopLeftMenuLayout from '@/layouts/desktop-left-menu-layout';\nimport CategoryItemList from '@/components/category-item-list';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  data: ISituationPageQuery;\n  pageContext: ISitePageContext;\n}\n\nconst Page: React.FC<IProps> = ({ data, pageContext }) => {\n  const relatedSituations: React.ComponentProps<\n    typeof CategoryItemList\n  >['items'] = data.situationArea.relationships.situation.map((situation) => ({\n    id: situation.id,\n    name: situation.title,\n    path: situation.path.alias,\n    isActive: situation.path.alias === pageContext.slug,\n    theme: 'blue',\n  }));\n  const { t } = useTranslation();\n  return (\n    <Layout pageContext={pageContext}>\n      <Seo\n        title={data.situation.title}\n        description={\n          data.situation.meta_description || t('current_measures_overview_meta')\n        }\n        pagePath={data.situation.path.alias}\n        htmlLanguage={pageContext.langCode}\n      />\n      <SchemaComp\n        datePublished={\n          data.situation.valid_from\n            ? data.situation.valid_from\n            : data.situation.created\n        }\n        dateModified={data.situation.changed}\n        title={data.situation.title}\n        langCode={\n          pageContext.langCode ? pageContext.langCode : data.situation.langcode\n        }\n        isBlogPost\n        description={data.situation.meta_description}\n        breadcrumbItems={[\n          { title: t('home'), url: '/' },\n          {\n            title: t('life_situations'),\n            url: t(`slug_situations`),\n          },\n          {\n            title: data.situation.relationships?.situation_type?.name,\n            url: data.situation.relationships?.situation_type?.path?.alias,\n          },\n          data.situation.title,\n        ]}\n        questions_answers={data.situation.questions_answers}\n      />\n      <Container>\n        <div className=\"pt-1\">\n          <Breadcrumb\n            items={[\n              { title: t('home'), url: '/' },\n              {\n                title: t('life_situations'),\n                url: t(`slug_situations`),\n              },\n              {\n                title: data.situation.relationships?.situation_type?.name,\n                url: data.situation.relationships?.situation_type?.path?.alias,\n              },\n              data.situation.title,\n            ]}\n            variant=\"inverse\"\n          />\n        </div>\n        <DesktopLeftMenuLayout\n          theme=\"blue\"\n          menu={\n            <CategoryItemList\n              theme=\"blue\"\n              items={relatedSituations}\n              linkBack={{\n                slug: pageContext.listSlug,\n                title: t('life_situations'),\n              }}\n              title={data.situationArea.name}\n              titleIconCode={data.situationArea?.relationships?.icon?.code}\n            />\n          }\n          hideMenuOnMobile\n        >\n          <SituationDetail situation={data.situation} />\n        </DesktopLeftMenuLayout>\n      </Container>\n    </Layout>\n  );\n};\nexport default Page;\n\nexport const query = graphql`\n  query SituationPage($slug: String!, $listSlug: String!, $langCode: String!) {\n    situation(path: { alias: { eq: $slug }, langcode: { eq: $langCode } }) {\n      title\n      meta_description\n      content {\n        processed\n      }\n      path {\n        alias\n      }\n      changed\n      valid_from\n      langcode\n      created\n      ...SituationDetail\n    }\n    situationArea: area(path: { alias: { eq: $listSlug } }) {\n      name\n      path {\n        alias\n      }\n      relationships {\n        icon {\n          code\n        }\n        situation {\n          id\n          title\n          path {\n            alias\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
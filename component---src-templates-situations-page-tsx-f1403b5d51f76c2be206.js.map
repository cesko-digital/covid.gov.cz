{"version":3,"sources":["webpack:///./src/components/related-topics/related-topics.module.scss","webpack:///./src/components/related-measure/related-measure.module.scss","webpack:///./src/components/link-styled/link-styled.module.scss","webpack:///./src/components/accordion/accordion-section.module.scss","webpack:///./src/components/content-box/content-box.module.scss","webpack:///./src/components/content-box/content-box.tsx","webpack:///./node_modules/@material-ui/icons/esm/Clear.js","webpack:///./node_modules/@material-ui/icons/esm/Add.js","webpack:///./src/components/accordion/accordion-section.tsx","webpack:///./src/components/accordion/accordion.tsx","webpack:///./src/components/related-measure/related-measure.tsx","webpack:///./src/components/link-styled/linkStyled.tsx","webpack:///./src/components/link-list/link-list.tsx","webpack:///./src/components/related-topics/related-topics.tsx","webpack:///./src/components/situation-detail/situation-detail.tsx","webpack:///./src/templates/situations/page.tsx"],"names":["module","exports","children","title","description","buttonVariant","buttonText","buttonHref","variant","noPadding","className","classNames","styles","col","dangerouslySetInnerHTML","__html","contentBoxDescription","href","text","createSvgIcon","createElement","d","useState","opened","setOpened","toggleSection","useCallback","section","onClick","icon","sectionContent","data","key","index","measure","relatedMeasure","to","alias","regions","region","displayTime","validFrom","validTo","valid_to","linkStyled","linkStyledLink","chevron","style","fontSize","linkStyledIcon","links","link","t","useTranslation","situation","relatedSituations","faq","hasFaq","Boolean","hasRelatedLinks","hasRelatedMeasures","hasRelatedSituations","hasUpdate","iconCode","titleIconCode","lastUpdated","processedContent","beforeContent","reactStringReplace","datetime","valid_from","processed","uri","isMobile","last_updated","boldedTitleCount","item","value","query","pageContext","id","name","path","isActive","theme","hasTransparentHeader","showSearchInHeader","showBackgroundImage","pagePath","htmlLanguage","langCode","datePublished","dateModified","isBlogPost","breadcrumbItems","url","questions_answers","items","menu","linkBack","slug","code","hideMenuOnMobile"],"mappings":"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","file":"component---src-templates-situations-page-tsx-f1403b5d51f76c2be206.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"related-topics-module--wrapper--386kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"relatedMeasure\":\"related-measure-module--relatedMeasure--1ipsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkStyled\":\"link-styled-module--linkStyled--_N7FG\",\"chevron\":\"link-styled-module--chevron--2Gs2D\",\"linkStyledLink\":\"link-styled-module--linkStyledLink--2U7Xp\",\"overview\":\"link-styled-module--overview--3la44\",\"more\":\"link-styled-module--more--1pcO-\",\"direct\":\"link-styled-module--direct--3mpTG\",\"with-icon\":\"link-styled-module--with-icon--OQ6VE\",\"withIcon\":\"link-styled-module--with-icon--OQ6VE\",\"btn\":\"link-styled-module--btn--_AE_8\",\"breadcrumb__link\":\"link-styled-module--breadcrumb__link--3Y4pX\",\"breadcrumbLink\":\"link-styled-module--breadcrumb__link--3Y4pX\",\"nav__link\":\"link-styled-module--nav__link--1aeQT\",\"navLink\":\"link-styled-module--nav__link--1aeQT\",\"btn-login\":\"link-styled-module--btn-login--3Rfzv\",\"btnLogin\":\"link-styled-module--btn-login--3Rfzv\",\"guide__link\":\"link-styled-module--guide__link--1KQ0y\",\"guideLink\":\"link-styled-module--guide__link--1KQ0y\",\"guide__link-back\":\"link-styled-module--guide__link-back--18We2\",\"guideLinkBack\":\"link-styled-module--guide__link-back--18We2\",\"not-visited\":\"link-styled-module--not-visited--1Ob-0\",\"notVisited\":\"link-styled-module--not-visited--1Ob-0\",\"paginator__link\":\"link-styled-module--paginator__link--3xie9\",\"paginatorLink\":\"link-styled-module--paginator__link--3xie9\",\"linkStyledIcon\":\"link-styled-module--linkStyledIcon--1ApnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"accordion-section-module--section--BMIm5\",\"sectionHeading\":\"accordion-section-module--sectionHeading--1aw0-\",\"sectionButton\":\"accordion-section-module--sectionButton--1rqdf\",\"sectionContent\":\"accordion-section-module--sectionContent--3m_BR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBoxTitle\":\"content-box-module--contentBoxTitle--3E5Vo\",\"contentBoxDescription\":\"content-box-module--contentBoxDescription--O2FI4\",\"contentBox\":\"content-box-module--contentBox--3WK0J\",\"contentBoxNoPadding\":\"content-box-module--contentBoxNoPadding--2vKlZ\",\"contentBox--white\":\"content-box-module--contentBox--white--2fBcG\",\"contentBoxWhite\":\"content-box-module--contentBox--white--2fBcG\",\"contentBox--blue\":\"content-box-module--contentBox--blue--243gT\",\"contentBoxBlue\":\"content-box-module--contentBox--blue--243gT\",\"content-box-btn\":\"content-box-module--content-box-btn--281FR\",\"contentBoxBtn\":\"content-box-module--content-box-btn--281FR\",\"content-box-btn--blue\":\"content-box-module--content-box-btn--blue--22dPm\",\"contentBoxBtnBlue\":\"content-box-module--content-box-btn--blue--22dPm\"};","import React from 'react';\nimport classNames from 'classnames';\nimport Button, { ButtonVariant } from '@/components/button';\nimport Col from '@/components/col';\n\nimport styles from './content-box.module.scss';\n\ninterface Props {\n  title?: string;\n  description?: string;\n  boldedTitleCount?: number;\n  buttonVariant?: ButtonVariant;\n  buttonText?: string;\n  buttonHref?: string;\n  variant?: 'white' | 'blue';\n  noPadding?: boolean;\n}\n\nconst ContentBox: React.FC<Props> = ({\n  children,\n  title,\n  description,\n  buttonVariant,\n  buttonText,\n  buttonHref,\n  variant = '',\n  noPadding,\n}) => {\n  return (\n    // contentBox--white\n    // contentBox--blue\n    <div\n      className={classNames(\n        styles.contentBox,\n        styles[`contentBox--${variant}`],\n        noPadding && styles.contentBoxNoPadding,\n        'row',\n      )}\n    >\n      <Col col={12}>\n        {title && (\n          <h2\n            className={styles.contentBoxTitle}\n            dangerouslySetInnerHTML={{\n              __html: title,\n            }}\n          />\n        )}\n        {description && (\n          <p className={styles.contentBoxDescription}>{description}</p>\n        )}\n        {children}\n        {buttonText && (\n          <Button\n            href={buttonHref}\n            variant={buttonVariant}\n            text={buttonText}\n            className={classNames(styles.contentBoxBtn, {\n              [styles.contentBoxBtnBlue]: variant === 'white',\n            })}\n          />\n        )}\n      </Col>\n    </div>\n  );\n};\n\nexport default ContentBox;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport { Add, Clear } from '@material-ui/icons';\n\nimport styles from './accordion-section.module.scss';\nimport Button from '@/components/button';\n\nexport interface Section {\n  title: string;\n  text: string;\n}\n\nconst AccordionSection: React.FC<Section> = ({ title, text }) => {\n  const [opened, setOpened] = useState(false);\n\n  const toggleSection = useCallback(() => {\n    setOpened(!opened);\n  }, [opened]);\n\n  return (\n    <div className={styles.section}>\n      <div\n        className={classNames(\n          styles.sectionHeading,\n          'd-flex',\n          'justify-content-between',\n          'align-items-center',\n        )}\n        onClick={toggleSection}\n      >\n        {title}\n        <Button\n          icon={opened ? <Clear /> : <Add />}\n          className={classNames(\n            styles.sectionButton,\n            'd-flex',\n            'justify-content-center',\n            'align-items-center',\n          )}\n          variant=\"yellow\"\n        />\n      </div>\n      {opened && <div className={styles.sectionContent}>{text}</div>}\n    </div>\n  );\n};\n\nexport default AccordionSection;\n","import React from 'react';\nimport AccordionSection, {\n  Section,\n} from '@/components/accordion/accordion-section';\n\ninterface Props {\n  data: Section[];\n}\n\nconst Accordion: React.FC<Props> = ({ data }) => {\n  return (\n    <>\n      {data.map((item, index) => (\n        <AccordionSection key={index} {...item} />\n      ))}\n    </>\n  );\n};\n\nexport default Accordion;\n","import React from 'react';\n\nimport { IRelatedMeasureFragment } from '@graphql-types';\nimport { graphql } from 'gatsby';\nimport Link from '@/components/link';\nimport { RegionsMarker, TimeMarker } from '../marker';\n\nimport styles from './related-measure.module.scss';\n\ninterface IProps {\n  measure: IRelatedMeasureFragment;\n}\n\nconst RelatedMeasure: React.FC<IProps> = ({ measure }) => {\n  return (\n    <div className={styles.relatedMeasure}>\n      <Link className=\"color-blue\" to={measure.path.alias}>\n        {measure.title}\n      </Link>\n      <RegionsMarker regions={measure.relationships.region} />\n      <TimeMarker\n        displayTime\n        validFrom={measure.valid_from}\n        validTo={measure.valid_to}\n      />\n    </div>\n  );\n};\n\nexport const query = graphql`\n  fragment RelatedMeasure on measure {\n    title\n    path {\n      alias\n      langcode\n    }\n    valid_from\n    valid_to\n    relationships {\n      region {\n        name\n      }\n    }\n  }\n`;\n\nexport default RelatedMeasure;\n","import React from 'react';\nimport Link from '@/components/link';\nimport styles from './link-styled.module.scss';\nimport { KeyboardArrowRight } from '@material-ui/icons';\n\ninterface Props {\n  title: string;\n  to: string;\n}\n\nconst LinkStyled: React.FC<Props> = ({ to, title }) => {\n  return (\n    <p className={styles.linkStyled}>\n      <Link to={to} title={title} className={styles.linkStyledLink}>\n        {title}\n        <span className={styles.chevron}>\n          <KeyboardArrowRight\n            style={{ fontSize: 20 }}\n            className={styles.linkStyledIcon}\n          />\n        </span>\n      </Link>\n    </p>\n  );\n};\n\nexport default LinkStyled;\n","import React from 'react';\nimport LinkStyled from '@/components/link-styled';\n\ninterface Props {\n  links: Array<{\n    path?: { alias?: string; langcode?: string };\n    title?: string;\n  }>;\n}\n\nconst LinkList: React.FC<Props> = ({ links }) => {\n  if (links.length === 0) {\n    return null;\n  }\n  return (\n    <>\n      {links.map((link, i) => (\n        <LinkStyled key={i} title={link.title} to={link.path.alias} />\n      ))}\n    </>\n  );\n};\n\nexport default LinkList;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from '../i18n';\nimport LinkList from '../link-list';\nimport styles from './related-topics.module.scss';\n\ninterface Props {\n  links: Array<{\n    path?: { alias?: string; langcode?: string };\n    title?: string;\n  }>;\n}\n\nconst RelatedTopics: React.FC<Props> = ({ links }) => {\n  const { t } = useTranslation();\n  return (\n    <div className={classNames(styles.wrapper)}>\n      <h3\n        dangerouslySetInnerHTML={{ __html: t('similar_topics') }}\n        className=\"mb-1\"\n      ></h3>\n      <LinkList links={links} />\n    </div>\n  );\n};\n\nexport default RelatedTopics;\n","import React from 'react';\nimport reactStringReplace from 'react-string-replace';\n\nimport Container from '@/components/container';\nimport Link from '@/components/link';\n\nimport Accordion from '../accordion';\nimport ContentBox from '../content-box';\nimport { ISituationDetailFragment } from '@graphql-types';\nimport { graphql } from 'gatsby';\nimport TopicDetail from '../topic-detail';\nimport RelatedMeasure from '../related-measure';\nimport { useTranslation } from '../i18n';\nimport LastUpdate from '../last-update';\nimport { UpdateWarning } from '../update-warning/update-warning';\nimport Time from '../time';\nimport RelatedTopics from '../related-topics/related-topics';\n\ninterface IProps {\n  situation: ISituationDetailFragment;\n}\n\nconst SituationDetail: React.FC<IProps> = ({ situation }) => {\n  const { t } = useTranslation();\n\n  const relatedSituations = situation.relationships.related_situations;\n  const faq = situation.questions_answers;\n\n  const hasFaq = Boolean(faq.length);\n  const hasRelatedLinks = Boolean(situation.links.length);\n  const hasRelatedMeasures = Boolean(situation.relationships.measures.length);\n  const hasRelatedSituations = Boolean(relatedSituations.length);\n  const hasUpdate = Boolean(situation.update);\n\n  const iconCode =\n    situation.relationships?.icon?.code ||\n    situation.relationships?.situation_type?.relationships?.icon?.code;\n\n  return (\n    <>\n      <TopicDetail\n        title={situation.title}\n        titleIconCode={iconCode}\n        lastUpdated={situation?.last_updated}\n        processedContent={situation?.content?.processed}\n        beforeContent={\n          hasUpdate && (\n            <UpdateWarning\n              className=\"pb-2\"\n              variant=\"info\"\n              title={reactStringReplace(\n                t('situation_valid_from_header').replace(\n                  '{pes}',\n                  situation.update.pes,\n                ),\n                '{date}',\n                () => (\n                  <Time datetime={situation.update.valid_from} />\n                ),\n              )}\n            >\n              <div\n                dangerouslySetInnerHTML={{ __html: situation.update.processed }}\n              />\n            </UpdateWarning>\n          )\n        }\n      />\n      <div className=\"bg-white mb-3 pb-2 pb-md-0 px-2 px-md-3\">\n        {hasRelatedMeasures && (\n          <div className=\"pt-2\">\n            <hr />\n            <h3 className=\"mb-1 color-blue-dark\">{t('related_measures')}</h3>\n            {situation.relationships.measures.map((measure) => (\n              <RelatedMeasure key={measure.path.alias} measure={measure} />\n            ))}\n          </div>\n        )}\n        {hasRelatedLinks && (\n          <div className=\"pt-2\">\n            <hr />\n            <h3 className=\"mb-1 color-blue-dark\">{t('related')}</h3>\n            <div>\n              {situation.links.map((link, index) => (\n                <div key={index}>\n                  <Link className=\"color-blue mb-1\" to={link.uri}>\n                    {link.title}\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        <LastUpdate isMobile lastUpdated={situation?.last_updated} />\n      </div>\n      <Container className=\"px-0 px-md-3\">\n        <hr />\n        {hasRelatedSituations && <RelatedTopics links={relatedSituations} />}\n        {hasFaq && (\n          <ContentBox variant=\"blue\" title={t('faq')} boldedTitleCount={2}>\n            <Accordion\n              data={situation.questions_answers.map((item) => ({\n                title: item.question,\n                text: item.value,\n              }))}\n            />\n          </ContentBox>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport const query = graphql`\n  fragment SituationDetail on situation {\n    title\n    content {\n      processed\n    }\n    links {\n      uri\n      title\n    }\n    relationships {\n      region {\n        name\n      }\n      icon {\n        code\n      }\n      situation_type {\n        name\n        path {\n          alias\n        }\n        relationships {\n          icon {\n            code\n          }\n        }\n      }\n      measures {\n        ...RelatedMeasure\n      }\n      related_situations {\n        title\n        path {\n          alias\n          langcode\n        }\n      }\n    }\n    path {\n      alias\n    }\n    questions_answers {\n      question\n      value\n    }\n    update {\n      processed\n      valid_from\n      pes\n    }\n    changed\n    valid_from\n    valid_to\n    last_updated\n  }\n`;\n\nexport default SituationDetail;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ISituationPageQuery, ISitePageContext } from 'graphql-types';\nimport Layout from '@/layouts/default-layout';\nimport SituationDetail from '@/components/situation-detail/situation-detail';\nimport Container from '@/components/container';\nimport { SchemaComp } from '@/components/schema/schema';\nimport { SEO as Seo } from 'gatsby-plugin-seo';\nimport Breadcrumb from '@/components/breadcrumb';\nimport DesktopLeftMenuLayout from '@/layouts/desktop-left-menu-layout';\nimport CategoryItemList from '@/components/category-item-list';\nimport { useTranslation } from '@/components/i18n';\n\ninterface IProps {\n  data: ISituationPageQuery;\n  pageContext: ISitePageContext;\n}\n\nconst Page: React.FC<IProps> = ({ data, pageContext }) => {\n  const relatedSituations: React.ComponentProps<\n    typeof CategoryItemList\n  >['items'] = data.situationArea.relationships.situation.map((situation) => ({\n    id: situation.id,\n    name: situation.title,\n    path: situation.path.alias,\n    isActive: situation.path.alias === pageContext.slug,\n    theme: 'blue',\n  }));\n  const { t } = useTranslation();\n  return (\n    <Layout\n      pageContext={pageContext}\n      hasTransparentHeader={false}\n      showSearchInHeader\n      showBackgroundImage={false}\n    >\n      <Seo\n        title={data.situation.title}\n        description={\n          data.situation.meta_description || t('current_measures_overview_meta')\n        }\n        pagePath={data.situation.path.alias}\n        htmlLanguage={pageContext.langCode}\n      />\n      <SchemaComp\n        datePublished={\n          data.situation.valid_from\n            ? data.situation.valid_from\n            : data.situation.created\n        }\n        dateModified={data.situation.changed}\n        title={data.situation.title}\n        langCode={\n          pageContext.langCode ? pageContext.langCode : data.situation.langcode\n        }\n        isBlogPost\n        description={data.situation.meta_description}\n        breadcrumbItems={[\n          { title: t('home'), url: '/' },\n          {\n            title: t('life_situations'),\n            url: t(`slug_situations`),\n          },\n          {\n            title: data.situation.relationships?.situation_type?.name,\n            url: data.situation.relationships?.situation_type?.path?.alias,\n          },\n          data.situation.title,\n        ]}\n        questions_answers={data.situation.questions_answers}\n      />\n      <Container>\n        <div className=\"pt-1 pb-1 pt-md-3 pb-md-3\">\n          <Breadcrumb\n            items={[\n              { title: t('home'), url: '/' },\n              {\n                title: t('life_situations'),\n                url: t(`slug_situations`),\n              },\n              {\n                title: data.situation.relationships?.situation_type?.name,\n                url: data.situation.relationships?.situation_type?.path?.alias,\n              },\n              data.situation.title,\n            ]}\n          />\n        </div>\n        <DesktopLeftMenuLayout\n          theme=\"blue\"\n          menu={\n            <CategoryItemList\n              theme=\"blue\"\n              items={relatedSituations}\n              linkBack={{\n                slug: pageContext.listSlug,\n                title: t('life_situations'),\n              }}\n              title={data.situationArea.name}\n              titleIconCode={data.situationArea?.relationships?.icon?.code}\n            />\n          }\n          hideMenuOnMobile\n        >\n          <SituationDetail situation={data.situation} />\n        </DesktopLeftMenuLayout>\n      </Container>\n    </Layout>\n  );\n};\nexport default Page;\n\nexport const query = graphql`\n  query SituationPage($slug: String!, $listSlug: String!, $langCode: String!) {\n    situation(path: { alias: { eq: $slug }, langcode: { eq: $langCode } }) {\n      title\n      meta_description\n      content {\n        processed\n      }\n      path {\n        alias\n      }\n      changed\n      valid_from\n      langcode\n      created\n      ...SituationDetail\n    }\n    situationArea: area(path: { alias: { eq: $listSlug } }) {\n      name\n      path {\n        alias\n      }\n      relationships {\n        icon {\n          code\n        }\n        situation {\n          id\n          title\n          path {\n            alias\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}